{"version":3,"sources":["./src/app/pages/tableviewer/tableviewer-conj-panel/tableviewer-conj-panel.component.ts","./src/app/pages/tableviewer/tableviewer-conj-panel/tableviewer-conj-panel.component.html","./src/app/pages/tableviewer/tableviewer-pers-panel/tableviewer-pers-panel.component.ts","./src/app/pages/tableviewer/tableviewer-pers-panel/tableviewer-pers-panel.component.html","./src/app/pages/tableviewer/tableviewer-selection.service.ts","./src/app/pages/tableviewer/tableviewer-temp-panel/tableviewer-temp-panel.component.ts","./src/app/pages/tableviewer/tableviewer-temp-panel/tableviewer-temp-panel.component.html","./src/app/pages/tableviewer/tableviewer-verb-panel/tableviewer-verb-panel.component.ts","./src/app/pages/tableviewer/tableviewer-verb-panel/tableviewer-verb-panel.component.html","./src/app/pages/tableviewer/tableviewer.module.ts","./src/app/pages/tableviewer/tableviewer/tableviewer.component.ts","./src/app/pages/tableviewer/tableviewer/tableviewer.component.html"],"names":[],"mappings":"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","file":"pages-tableviewer-tableviewer-module-es2015.js","sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ConjugationService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { EChartOption } from 'echarts';\nimport { ToastrService } from 'ngx-toastr';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { merge, uniq } from 'lodash';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\nimport { AffixService, PronounService, VerbService } from '../../../core/core.module'\n\n@Component({\n  selector: 'ww-tableviewer-conj-panel',\n  templateUrl: './tableviewer-conj-panel.component.html',\n  styleUrls: ['./tableviewer-conj-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerConjPanelComponent implements OnInit {\n  settings$: Observable<SettingsState>;\n  chart_response$: Observable<EChartOption>;\n  chart_response: EChartOption;\n  response$: any;\n  @ViewChild('explorer') explorer;\n  showDelay = new FormControl(1000);\n  hideDelay = new FormControl(200);\n  tooltipPosition = 'above';\n  showExplorer = false;\n  loading = false;\n  show_toolbar = true;\n  order = true;\n  depth = 1;\n  constructor(\n    private conjugationService: ConjugationService,\n    private selectionService: TableviewerSelectionService,\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private store: Store<State>,\n    private affixService: AffixService,\n    private pronounService: PronounService,\n    private verbService: VerbService) { }\n\n  ngOnInit(): void {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  conjugate() {\n    this.loading = true;\n    if (!this.showExplorer) {\n      this.response$ = this.conjugationService.conjugateTable(\n        this.selectionService.selection\n      );\n      console.log(this.response$);\n      this.response$.subscribe(x => console.log(x));\n      return this.response$;\n    } else {\n      let order = 'PT';\n      if (this.order) {\n        order = 'TP';\n      }\n      this.chart_response$ = this.createChart(\n        this.selectionService.selection,\n        order,\n        this.depth\n      );\n      this.chart_response$.subscribe(r => (this.chart_response = r));\n    }\n  }\n\n\n  createChartData(res, order, depth) {\n    let data = [];\n    let verbs: any = [];\n    let chartOption: EChartOption = {\n      tooltip: {\n        show: false,\n        trigger: 'item',\n        triggerOn: 'mousemove'\n      },\n      toolbox: {\n        feature: {\n          saveAsImage: { title: 'save', show: false }\n        }\n      },\n      legend: {\n        top: '2%',\n        left: '3%',\n        orient: 'vertical',\n        data: [],\n        borderColor: '#c23531'\n      },\n      series: []\n    };\n    let node;\n    for (let conjugation of res) {\n      conjugation = conjugation.values;\n      let v = conjugation.root['tag'];\n      let t = this.affixService.getAffOption(conjugation.affopt)['gloss'];\n      let vb = this.verbService.getVerb(v);\n      let p;\n      if (vb['thematic_relation'] === 'red') {\n        p = this.pronounService.getPronoun(conjugation.pronoun['agent'])['gloss'];\n      } else if (vb['thematic_relation'] === 'blue') {\n        p = this.pronounService.getPronoun(conjugation.pronoun['patient'])['gloss'];\n      } else {\n        p =\n          this.pronounService.getPronoun(conjugation.pronoun['agent'])['gloss'] +\n          ' > ' +\n          this.pronounService.getPronoun(conjugation.pronoun['patient'])['obj_gloss'];\n      }\n      const val = this.returnValue(conjugation);\n\n      if (order === 'TP') {\n        node = merge(node, { [v]: { [t]: { [p]: val } } });\n      } else {\n        node = merge(node, { [v]: { [p]: { [t]: val } } });\n      }\n    }\n\n    for (const verb of Object.keys(node)) {\n      verbs.push(verb);\n      let nv = { name: verb, children: [] };\n      for (const second of Object.keys(node[verb])) {\n        const ns = { name: second, children: [] };\n        for (const third of Object.keys(node[verb][second])) {\n          let nt = {\n            name: third,\n            children: [{ name: node[verb][second][third] }]\n          };\n          ns['children'].push(nt);\n        }\n        nv['children'].push(ns);\n      }\n      data.push(nv);\n    }\n\n    let top = 0;\n    let initialTreeDepth = 0;\n    if (verbs.length < 2) {\n      initialTreeDepth = depth;\n    } else {\n      // verbs.forEach(v => {\n      //   chartOption.legend['data'].push({\n      //     name: v,\n      //     icon: 'rectangle'\n      //   });\n      // });\n    }\n    for (var j = 0; j < data.length; j++) {\n      top += 20;\n      let ser = {\n        type: 'tree',\n        name: data[j]['name'],\n        data: [data[j]],\n        top: top.toString() + '%',\n        left: '12%',\n        bottom: '25%',\n        right: '20%',\n        symbolSize: 7,\n        initialTreeDepth: initialTreeDepth,\n        label: {\n          normal: {\n            position: 'bottom',\n            verticalAlign: 'middle',\n            align: 'middle'\n          }\n        },\n        leaves: {\n          label: {\n            normal: {\n              position: 'top',\n              verticalAlign: 'middle',\n              align: 'middle'\n            }\n          }\n        },\n        expandAndCollapse: true,\n        roam: true,\n        animationDuration: 550,\n        animationDurationUpdate: 750\n      };\n      chartOption.series.push(ser);\n    }\n    return chartOption;\n  }\n\n  returnValue(conjugation) {\n    let morphemes = [conjugation.root, conjugation.pronoun].concat(conjugation.affixes);\n    morphemes = morphemes.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    return morphemes.map(m => m.value).join('');\n  }\n\n  createChart(tableargs, order, depth) {\n    return this.conjugationService\n      .conjugate(tableargs)\n      .pipe(map(res => this.createChartData(res, order, depth)));\n  }\n\n  isString(val) {\n    return typeof val === 'string';\n  }\n\n  toggleExplorer() {\n    this.showExplorer = !this.showExplorer;\n    this.conjugate();\n  }\n\n  download() {\n    const query_args = this.conjugationService\n      .createRequestUrl(this.selectionService.selection)\n      .toString();\n    const query_args_docx = this.conjugationService\n      .createRequestUrl(this.selectionService.selection, [\n        { param: 'docx', value: 'true' }\n      ])\n      .toString();\n    const url = this.conjugationService.path + '?' + query_args;\n    const docx_url = this.conjugationService.path + '?' + query_args_docx;\n    this.http.get(url).subscribe(\n      data => {\n        console.log(data);\n        window.location.href = docx_url;\n        this.updateToast(data);\n      },\n      error => {\n        console.log(error);\n        this.updateToast(false, error.status);\n      }\n    );\n  }\n\n  updateToast(success?, code = 200) {\n    if (success) {\n      this.toastr.success('File succesfully downloaded');\n    } else {\n      this.toastr.error(\n        'This file couldn\\'t be downloaded. Please make sure your conjugation is valid.',\n        'Whoops!'\n      );\n    }\n  }\n\n}\n","<div class=\"panel\" *ngIf=\"settings$ | async as settings\">\n    <div *ngIf=\"show_toolbar\" class=\"panel__header\">\n        <h3 class=\"panel__title\">Conjugation toolbar</h3>\n        <div class=\"panel__toolbar toolbar\">\n            <button class=\"conjugate mat-accent\" mat-raised-button (click)=\"conjugate()\">\n                Conjugate\n            </button>\n            <select *ngIf=\"showExplorer\" [(ngModel)]=\"depth\" (ngModelChange)=\"conjugate()\"\n                class=\"toolbar__tool ui-button\" matTooltip=\"Select how many nodes to display\"\n                [matTooltipShowDelay]=\"showDelay.value\" [matTooltipHideDelay]=\"hideDelay.value\"\n                [matTooltipPosition]=\"tooltipPosition\">\n                <option value=\"0\">0</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n            </select>\n            <button *ngIf=\"showExplorer\" class=\"toolbar__tool ui-button\" mat-icon-button\n                (click)=\"order = !order; conjugate()\" matTooltip=\"Switch pronoun and tense nodes\"\n                [matTooltipShowDelay]=\"showDelay.value\" [matTooltipHideDelay]=\"hideDelay.value\"\n                [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Switch pronoun and temp\">cached</mat-icon>\n            </button>\n            <button class=\"ui-button toolbar__tool\" mat-icon-button (click)=\"toggleExplorer()\"\n                matTooltip=\"Switch between grid and tree views\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon *ngIf=\"!showExplorer\" aria-label=\"Conjugate\">create</mat-icon>\n                <mat-icon *ngIf=\"showExplorer\" aria-label=\"Conjugate\">grid_on</mat-icon>\n            </button>\n            <button (click)=\"download()\" *ngIf=\"!showExplorer\" class=\"ui-button toolbar__tool\" mat-icon-button\n                matTooltip=\"Download conjugations as file\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Download conjugations\">get_app</mat-icon>\n            </button>\n            <button (click)=\"show_toolbar = !show_toolbar\" class=\"ui-button toolbar__tool\" mat-icon-button\n                matTooltip=\"Hide toolbar\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Hide toolbar\">cancel</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"panel__underline height-5\">\n        <hr *ngIf=\"show_toolbar\" />\n        <button *ngIf=\"!show_toolbar\" (click)=\"show_toolbar = !show_toolbar\" class=\"float-right ui-button toolbar__tool\"\n            mat-icon-button matTooltip=\"Show toolbar\" [matTooltipShowDelay]=\"showDelay.value\"\n            [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n            <mat-icon aria-label=\"Show toolbar\">add_circle</mat-icon>\n        </button>\n    </div>\n    <div class=\"panel__content\">\n        <div>\n            <h3 class=\"desktop-only center-text margin-top-100 padding-20\" *ngIf=\"!response$ && !showExplorer\">\n                Please select one or more boxes from the <b>Person</b>, <b>Time</b> and\n                <b>Verb</b> panels and then press the enter key or conjugate button to\n                see your selection\n            </h3>\n            <h3 class=\"mobile-only padding-15 center-text\" *ngIf=\"!response$ && !showExplorer\">\n                Please select one or more boxes from the 'Person', 'Time' and 'Verb'\n                panels. <br />\n                and then press the button above to conjugate!\n            </h3>\n            <ng-template #spinner>\n                <ng-container *ngIf=\"loading && !(response$ | async)\">\n                    <mat-spinner class=\"centered margin-top-100\"></mat-spinner>\n                </ng-container>\n            </ng-template>\n        </div>\n\n        <div *ngIf=\"showExplorer\" class=\"full-width full-height\">\n            <div *ngIf=\"chart_response\">\n                <!-- <div #explorer echarts [options]=\"chart_response\" class=\"demo-chart\"></div> -->\n            </div>\n        </div>\n\n        <div *ngIf=\"!showExplorer\">\n            <div id=\"table-container\" class=\"rel\" *ngIf=\"response$ | async as response; else spinner\">\n                <div class=\"error__container\" *ngIf=\"isString(response)\">\n                    <h3 class=\"error__header\">\n                        Error\n                    </h3>\n                    <p class=\"error__message\">{{ response }}</p>\n                    <p class=\"error__message\">\n                        Please remove some of the checked options described above and try\n                        again.\n                    </p>\n                </div>\n                <table class=\"full-width abs\" *ngIf=\"!isString(response)\">\n                    <thead>\n                        <tr>\n                            <th>\n                                <h3>{{ 'ww.language' | translate }}</h3>\n                            </th>\n                            <th *ngIf=\"settings?.level.english_tier || settings?.level.translation_tier\">\n                                <h3>English</h3>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr class=\"b--bottom\" *ngFor=\"let conjugation of response\">\n                            <td class=\"center-text\">\n                                <h3 id=\"main\">\n                                    <span *ngFor=\"let item of conjugation['main']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] }}</span>\n                                </h3>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.breakdown_tier\">\n                                    <span *ngFor=\"let item of conjugation['main']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['main'].indexOf(item) < conjugation['main'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.gloss_tier\">\n                                    <span *ngFor=\"let item of conjugation['secondary']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\" [ngClass]=\"{\n                        highlight:\n                          (settings?.highlight)[item['type']] ||\n                          (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] | decapitalize }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['secondary'].indexOf(item) < conjugation['secondary'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                            </td>\n                            <td class=\"center-text\">\n                                <h4 id=\"main\" *ngIf=\"settings?.level.translation_tier\" class=\"no-padding header-text\">\n                                    <span class=\"translation\">{{ conjugation[\"translation\"] }}</span>\n                                </h4>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.english_tier\">\n                                    <span *ngFor=\"let item of conjugation['ternary']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']] }\">{{ item[\"value\"] | decapitalize }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['ternary'].indexOf(item) < conjugation['ternary'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Pronoun } from '../../../models/models';\nimport { PronounService } from '../../../core/core.module';\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nimport { FormControl, FormGroup } from '@angular/forms'\n\n@Component({\n  selector: 'ww-tableviewer-pers-panel',\n  templateUrl: './tableviewer-pers-panel.component.html',\n  styleUrls: ['./tableviewer-pers-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerPersPanelComponent implements OnInit {\n  agCheckboxGroup: FormGroup = new FormGroup({});\n  agCheckboxPossibleValues: Observable<Pronoun[]> = this.pnService.pronouns$.pipe(\n    map(values => {\n      values.forEach(value => { this.agCheckboxGroup.addControl(value['tag'], new FormControl(this.agCheckedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n  )\n  agCheckedValues: string[] = []\n  patCheckboxGroup: FormGroup = new FormGroup({});\n  patCheckboxPossibleValues: Observable<Pronoun[]> = this.pnService.pronouns$.pipe(\n    map(values => {\n      values.forEach(value => { this.patCheckboxGroup.addControl(value['tag'], new FormControl(this.patCheckedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n  )\n  patCheckedValues: string[] = []\n  chosenPro;\n  role = 'agent';\n  limit = 8;\n  selectAllAg = false;\n  selectAllPat = false;\n  constructor(private pnService: PronounService, private selectionService: TableviewerSelectionService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  pushAgChanges(c) {\n    this.selectionService.updateAgents(c)\n  }\n\n  pushPatChanges(c) {\n    this.selectionService.updatePatients(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  toggleSelectAll() {\n    if (this.role === 'agent') {\n      this.selectAllAg = !this.selectAllAg\n      this.agCheckboxPossibleValues.subscribe(pns => { pns.forEach(pn => this.agCheckboxGroup.controls[pn.tag].setValue(this.selectAllAg)) })\n    } else if (this.role === 'patient') {\n      this.selectAllPat = !this.selectAllPat\n      this.patCheckboxPossibleValues.subscribe(pns => { pns.forEach(pn => this.patCheckboxGroup.controls[pn.tag].setValue(this.selectAllPat)) })\n    }\n  }\n\n  checkRole() {\n    console.log(this.role)\n  }\n}\n","<div class='panel'>\n    <div class='panel__header'>\n      <h3 class='panel__title'>Person</h3>\n      <!-- <hr class='panel__underline'> -->\n      <div class='panel__toolbar--right toolbar'>\n        <mat-button-toggle-group class=\"toolbar__tool\" name=\"fontStyle\" aria-label=\"Font Style\" [(ngModel)]=\"role\" (ngModelChange)=\"checkRole()\">\n          <mat-button-toggle value=\"agent\" class=\"bg-red\" [class.color-white]=\"role !== 'patient'\" [class.faded]=\"role === 'patient'\">Agent</mat-button-toggle>\n          <mat-button-toggle value=\"patient\" class=\"bg-blue\" [class.color-white]=\"role !== 'agent'\" [class.faded]=\"role === 'agent'\">Patient</mat-button-toggle>\n        </mat-button-toggle-group>\n        <button *ngIf=\"!selectAllAg && role === 'agent'\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAllAg && role === 'agent'\" class=\"toolbar__tool bg-red color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"!selectAllPat && role === 'patient'\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAllPat && role === 'patient'\" class=\"toolbar__tool bg-blue color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n      </div>\n    </div>\n  \n    <div class='panel__content'>\n      <mat-list [formGroup]=\"agCheckboxGroup\" class=\"panel__list pro one\" role=\"list\" *ngIf=\"role === 'agent'\">\n        <div *ngFor=\"let value of agCheckboxPossibleValues | async | slice:0:limit \">\n          <mat-checkbox [color]=\"'red'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"agCheckboxGroup\" class=\"panel__list pro two\" role=\"list\" *ngIf=\"role === 'agent'\">\n        <div *ngFor=\"let value of agCheckboxPossibleValues | async | slice:limit \">\n          <mat-checkbox [color]=\"'red'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"patCheckboxGroup\" class=\"panel__list pro one\" role=\"list\" *ngIf=\"role === 'patient'\">\n        <div *ngFor=\"let value of patCheckboxPossibleValues | async  | slice:0:limit \">\n          <mat-checkbox [color]=\"'blue'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"patCheckboxGroup\" class=\"panel__list pro two\" role=\"list\" *ngIf=\"role === 'patient'\">\n        <div *ngFor=\"let value of patCheckboxPossibleValues | async  | slice:limit \">\n          <mat-checkbox [color]=\"'blue'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { RequestParams } from '../../models/models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableviewerSelectionService {\n  selection: RequestParams = { 'root': [], 'aff-option': [], 'patient': [], 'agent': [] };\n  constructor() { }\n\n  updateVerbs(v) {\n    this.selection['root'] = v\n  }\n\n  updateAgents(a) {\n    this.selection['agent'] = a;\n  }\n\n  updatePatients(p) {\n    this.selection['patient'] = p;\n  }\n\n  updateAffOptions(ao) {\n    this.selection['aff-option'] = ao;\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { AffOption } from '../../../models/models';\nimport { AffixService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ww-tableviewer-temp-panel',\n  templateUrl: './tableviewer-temp-panel.component.html',\n  styleUrls: ['./tableviewer-temp-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerTempPanelComponent implements OnInit {\n  checkboxGroup: FormGroup = new FormGroup({});\n  checkboxPossibleValues: Observable<AffOption[]> = this.affixService.affoptions$.pipe(\n    map(values => {\n      values.forEach(value => { this.checkboxGroup.addControl(value['tag'], new FormControl(this.checkedValues.indexOf(value['tag']) !== -1)) }); return values\n    }))\n  checkedValues: string[] = []\n  chosenTimes = [];\n  selectAll = false;\n  constructor(private affixService: AffixService, private selectionService: TableviewerSelectionService) { }\n\n  ngOnInit(): void {\n  }\n\n  pushChanges(c) {\n    this.selectionService.updateAffOptions(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  toggleSelectAll() {\n    this.selectAll = !this.selectAll\n    this.checkboxPossibleValues.subscribe(ts => { ts.forEach(t => this.checkboxGroup.controls[t.tag].setValue(this.selectAll)) })\n  }\n\n\n}\n","<div class=\"panel\">\n    <div class=\"panel__header\">\n      <h3 class=\"panel__title\">Time</h3>\n      <div class=\"panel__toolbar toolbar\">\n        <button *ngIf=\"!selectAll\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAll\" class=\"toolbar__tool bg-accent margin-right-15 color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n      </div>\n    </div>\n    <mat-list role=\"list\" class=\"list panel__list\">\n      <div [formGroup]=\"checkboxGroup\" *ngFor=\"let value of checkboxPossibleValues | async \">\n        <mat-checkbox [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n      </div>\n    </mat-list>\n  </div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Verb } from '../../../models/models';\nimport { VerbService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Observable, Subject } from 'rxjs'\nimport { debounceTime, map } from 'rxjs/operators'\n\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ww-tableviewer-verb-panel',\n  templateUrl: './tableviewer-verb-panel.component.html',\n  styleUrls: ['./tableviewer-verb-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerVerbPanelComponent implements OnInit {\n  verbs$: Observable<Verb[]> = this.verbService.verbs$;\n  checkboxGroup: FormGroup = new FormGroup({});\n  checkboxPossibleValues: Observable<Verb[]>;\n  checkedValues: string[] = []\n  settings;\n  increment = 1000;\n  bottomLimit = 0;\n  topLimit: number\n  viewableVerbs: Verb[];\n  selection = [];\n  searchField: FormControl;\n  verbForm: FormGroup;\n  verbSubscription;\n  constructor(public verbService: VerbService, private fb: FormBuilder, public selectionService: TableviewerSelectionService) {\n    // initialize form with list of checkboxes\n    this.verbSubscription = this.verbs$.subscribe(values => {\n      values.forEach(value => { this.checkboxGroup.addControl(value['tag'], new FormControl(this.checkedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n\n    // subscribe to search input\n    this.searchField = new FormControl();\n    this.verbForm = this.fb.group({ search: this.searchField })\n    this.searchField.valueChanges.pipe(\n      debounceTime(100),\n      map(term => { return this.getEntriesFrom(term) })\n    ).subscribe((result) => {\n      this.viewableVerbs = result;\n    })\n\n\n    // create selection observable\n    this.checkboxGroup.valueChanges.subscribe(c => { c = this.filterTrue(c); if (c) { this.pushChanges(c) } })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n    this.verbSubscription.unsubscribe();\n  }\n\n  pushChanges(c) {\n    this.selectionService.updateVerbs(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  getEntriesFrom(term) {\n    let vbs = this.verbService.verbs.filter(v => { return this.filterEntries(v, term) }\n    ).slice(this.bottomLimit, this.increment)\n    return vbs\n  }\n\n  filterEntries(v, term) {\n    return (v.gloss.toLowerCase().indexOf(term.toLowerCase()) > -1 || v.tag.toLowerCase().indexOf(term.toLowerCase()) > -1)\n  }\n\n\n  swipePrev() {\n    if (this.bottomLimit - this.increment > 0) {\n      this.bottomLimit -= this.increment;\n      // this.topLimit -= this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    } else {\n      this.bottomLimit = 0;\n      // this.topLimit = this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    }\n  }\n\n  swipeNext() {\n    if (this.bottomLimit + this.increment < this.topLimit) {\n      this.bottomLimit += this.increment;\n      // this.topLimit += this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    } else {\n      this.bottomLimit = this.topLimit - this.increment;\n      // this.topLimit = this.verbs.length;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    }\n  }\n\n  remove(verb) {\n    this.checkboxGroup.controls[verb].setValue(false)\n  }\n}\n","<div class='panel'>\n    <div class='panel__header'>\n      <h3 class=\"panel__title\">Verb</h3>\n      <mat-chip-list class=\"panel__toolbar toolbar\">\n        <mat-chip class='toolbar__tool' [ngClass]=\"'bg-' + verbService.getVerb(verb)['thematic_relation']\" *ngFor=\"let verb of selectionService.selection.root\"\n          [selectable]=\"true\" [removable]=\"true\" (removed)=\"remove(verb)\">\n          {{verbService.getVerb(verb)['display']}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n      </mat-chip-list>\n    </div>\n    <div class=\"panel__content\">\n      <form class='margin-20'>\n        <div>\n          <mat-form-field [formGroup]=\"verbForm\">\n            <input autocomplete=\"off\" type=\"text\" placeholder=\"Type a verb\" aria-label=\"Number\" matInput formControlName=\"search\">\n          </mat-form-field>\n        </div>\n      </form>\n      <mat-list class='panel__list' role=\"list\" *ngIf=\"viewableVerbs && searchField.value !== ''\">\n        <div [formGroup]=\"checkboxGroup\" *ngFor=\"let value of viewableVerbs\">\n          <mat-checkbox class='margin-5' [formControlName]=\"value.tag\" [disabled]=\"selectionService.selection.root.indexOf(value.tag) < 0 && selectionService.selection.root.length >= 3\">{{\n            value.gloss + \" - \" }}\n            <span [ngClass]=\"'color-' + value.thematic_relation\">{{value.display}}</span>\n          </mat-checkbox>\n        </div>\n      </mat-list>\n      <p class='margin-top-50 margin-30' *ngIf=\"searchField.value !== '' && searchField.value !== null && viewableVerbs?.length === 0\">Sorry,\n        we can't find any verbs that match '{{ searchField.value }}'</p>\n    </div>\n    \n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableviewerComponent } from './tableviewer/tableviewer.component';\nimport { TableviewerConjPanelComponent } from './tableviewer-conj-panel/tableviewer-conj-panel.component';\nimport { TableviewerPersPanelComponent } from './tableviewer-pers-panel/tableviewer-pers-panel.component';\nimport { TableviewerTempPanelComponent } from './tableviewer-temp-panel/tableviewer-temp-panel.component';\nimport { TableviewerVerbPanelComponent } from './tableviewer-verb-panel/tableviewer-verb-panel.component';\nimport { TableviewerSelectionService } from './tableviewer-selection.service';\nimport { SharedModule } from '../../shared/shared.module';\n\nexport {\n  TableviewerSelectionService\n}\n\n@NgModule({\n  declarations: [TableviewerComponent, TableviewerConjPanelComponent, TableviewerPersPanelComponent, TableviewerTempPanelComponent, TableviewerVerbPanelComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  providers: [\n    TableviewerSelectionService\n  ]\n})\nexport class TableviewerModule { }\n","import { Component, HostListener, OnInit, ViewChild, ChangeDetectionStrategy } from '@angular/core';\n\n// Imports\nimport { TableviewerConjPanelComponent } from '../tableviewer-conj-panel/tableviewer-conj-panel.component';\n\n\n@Component({\n  selector: 'ww-tableviewer',\n  templateUrl: './tableviewer.component.html',\n  styleUrls: ['./tableviewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerComponent implements OnInit {\n  @ViewChild('conjPanel') conjPanel: TableviewerConjPanelComponent;\n  cols: number;\n  rows: number;\n  conjrowspan: number;\n  conjcolspan: number;\n  halfrowspan: number;\n  fullrowspan: number;\n  breakpoint = 1100;\n  useTestAPI = false;\n  @HostListener('document:keyup.enter', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // if (event.keyCode === 13) {\n      this.conjPanel.conjugate();\n    // }\n  }\n  constructor() { }\n\n  ngOnInit() {\n    this.cols = window.innerWidth <= this.breakpoint ? 3 : 12;\n    this.rows = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.conjcolspan = window.innerWidth <= this.breakpoint ? 3 : 6;\n    this.conjrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.halfrowspan = window.innerWidth <= this.breakpoint ? 1 : 1;\n    this.fullrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n  }\n\n  onResize(event) {\n    this.cols = event.target.innerWidth <= this.breakpoint ? 3 : 12;\n    this.rows = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.conjcolspan = window.innerWidth <= this.breakpoint ? 3 : 6;\n    this.conjrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.halfrowspan = window.innerWidth <= this.breakpoint ? 1 : 1;\n    this.fullrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n  }\n\n  conjugate() {\n    this.conjPanel.conjugate();\n  }\n\n}\n","<div class=\"container page__content vwidth-90 centered\">\n    <mat-grid-list class='margin-bottom-50' [cols]=\"cols\" rowHeight=\"18em\" (window:resize)=\"onResize($event)\">\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"halfrowspan\" class=\"br-tl b--left b--right b--top bg-white\">\n        <ww-tableviewer-pers-panel class='custom-scroll full-width full-height'></ww-tableviewer-pers-panel>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"b--top b--left bg-white\" [colspan]=\"conjcolspan\" [rowspan]=\"conjrowspan\">\n        <ww-tableviewer-conj-panel #conjPanel class=\"custom-scroll full-width full-height\"></ww-tableviewer-conj-panel>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"fullrowspan\"\n        class=\"br--tr br--br b--left b--right b--top b--bottom bg-white\">\n        <ww-tableviewer-verb-panel class='custom-scroll full-width full-height'></ww-tableviewer-verb-panel>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"halfrowspan\" class=\"br--bl b--top b--left b--right b--bottom bg-white\">\n        <ww-tableviewer-temp-panel class='custom-scroll full-width'></ww-tableviewer-temp-panel>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <div class=\"height-100\"></div>\n  </div>"],"sourceRoot":"webpack:///"}