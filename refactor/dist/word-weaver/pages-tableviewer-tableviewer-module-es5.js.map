{"version":3,"sources":["webpack:///src/app/pages/tableviewer/tableviewer-conj-panel/tableviewer-conj-panel.component.ts","webpack:///src/app/pages/tableviewer/tableviewer-conj-panel/tableviewer-conj-panel.component.html","webpack:///src/app/pages/tableviewer/tableviewer-pers-panel/tableviewer-pers-panel.component.ts","webpack:///src/app/pages/tableviewer/tableviewer-pers-panel/tableviewer-pers-panel.component.html","webpack:///src/app/pages/tableviewer/tableviewer-selection.service.ts","webpack:///src/app/pages/tableviewer/tableviewer-temp-panel/tableviewer-temp-panel.component.ts","webpack:///src/app/pages/tableviewer/tableviewer-temp-panel/tableviewer-temp-panel.component.html","webpack:///src/app/pages/tableviewer/tableviewer-verb-panel/tableviewer-verb-panel.component.ts","webpack:///src/app/pages/tableviewer/tableviewer-verb-panel/tableviewer-verb-panel.component.html","webpack:///src/app/pages/tableviewer/tableviewer.module.ts","webpack:///src/app/pages/tableviewer/tableviewer/tableviewer.component.ts","webpack:///src/app/pages/tableviewer/tableviewer/tableviewer.component.html"],"names":["TableviewerConjPanelComponent","conjugationService","selectionService","http","toastr","store","affixService","pronounService","verbService","showDelay","hideDelay","tooltipPosition","showExplorer","loading","show_toolbar","order","depth","settings$","pipe","response$","conjugateTable","selection","console","log","subscribe","x","chart_response$","createChart","r","chart_response","res","data","verbs","chartOption","tooltip","show","trigger","triggerOn","toolbox","feature","saveAsImage","title","legend","top","left","orient","borderColor","series","node","conjugation","values","v","root","t","getAffOption","affopt","vb","getVerb","p","getPronoun","pronoun","val","returnValue","Object","keys","verb","push","nv","name","children","second","ns","third","nt","initialTreeDepth","length","j","ser","type","toString","bottom","right","symbolSize","label","normal","position","verticalAlign","align","leaves","expandAndCollapse","roam","animationDuration","animationDurationUpdate","morphemes","concat","affixes","sort","a","b","map","m","value","join","tableargs","conjugate","createChartData","query_args","createRequestUrl","query_args_docx","param","url","path","docx_url","get","window","location","href","updateToast","error","status","success","code","selector","templateUrl","styleUrls","changeDetection","OnPush","TableviewerPersPanelComponent","pnService","agCheckboxGroup","agCheckboxPossibleValues","pronouns$","forEach","addControl","agCheckedValues","indexOf","patCheckboxGroup","patCheckboxPossibleValues","patCheckedValues","role","limit","selectAllAg","selectAllPat","c","updateAgents","updatePatients","filter","k","pns","pn","controls","tag","setValue","checkRole","TableviewerSelectionService","ao","providedIn","TableviewerTempPanelComponent","checkboxGroup","checkboxPossibleValues","affoptions$","checkedValues","chosenTimes","selectAll","updateAffOptions","ts","TableviewerVerbPanelComponent","fb","verbs$","increment","bottomLimit","verbSubscription","searchField","verbForm","group","search","valueChanges","term","getEntriesFrom","result","viewableVerbs","filterTrue","pushChanges","unsubscribe","updateVerbs","vbs","filterEntries","slice","gloss","toLowerCase","topLimit","TableviewerModule","declarations","imports","providers","TableviewerComponent","breakpoint","useTestAPI","event","conjPanel","cols","innerWidth","rows","conjcolspan","conjrowspan","halfrowspan","fullrowspan","target","onResize"],"mappings":"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","file":"pages-tableviewer-tableviewer-module-es5.js","sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ConjugationService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { EChartOption } from 'echarts';\nimport { ToastrService } from 'ngx-toastr';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { merge, uniq } from 'lodash';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\nimport { AffixService, PronounService, VerbService } from '../../../core/core.module'\n\n@Component({\n  selector: 'ww-tableviewer-conj-panel',\n  templateUrl: './tableviewer-conj-panel.component.html',\n  styleUrls: ['./tableviewer-conj-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerConjPanelComponent implements OnInit {\n  settings$: Observable<SettingsState>;\n  chart_response$: Observable<EChartOption>;\n  chart_response: EChartOption;\n  response$: any;\n  @ViewChild('explorer') explorer;\n  showDelay = new FormControl(1000);\n  hideDelay = new FormControl(200);\n  tooltipPosition = 'above';\n  showExplorer = false;\n  loading = false;\n  show_toolbar = true;\n  order = true;\n  depth = 1;\n  constructor(\n    private conjugationService: ConjugationService,\n    private selectionService: TableviewerSelectionService,\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private store: Store<State>,\n    private affixService: AffixService,\n    private pronounService: PronounService,\n    private verbService: VerbService) { }\n\n  ngOnInit(): void {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  conjugate() {\n    this.loading = true;\n    if (!this.showExplorer) {\n      this.response$ = this.conjugationService.conjugateTable(\n        this.selectionService.selection\n      );\n      console.log(this.response$);\n      this.response$.subscribe(x => console.log(x));\n      return this.response$;\n    } else {\n      let order = 'PT';\n      if (this.order) {\n        order = 'TP';\n      }\n      this.chart_response$ = this.createChart(\n        this.selectionService.selection,\n        order,\n        this.depth\n      );\n      this.chart_response$.subscribe(r => (this.chart_response = r));\n    }\n  }\n\n\n  createChartData(res, order, depth) {\n    let data = [];\n    let verbs: any = [];\n    let chartOption: EChartOption = {\n      tooltip: {\n        show: false,\n        trigger: 'item',\n        triggerOn: 'mousemove'\n      },\n      toolbox: {\n        feature: {\n          saveAsImage: { title: 'save', show: false }\n        }\n      },\n      legend: {\n        top: '2%',\n        left: '3%',\n        orient: 'vertical',\n        data: [],\n        borderColor: '#c23531'\n      },\n      series: []\n    };\n    let node;\n    for (let conjugation of res) {\n      conjugation = conjugation.values;\n      let v = conjugation.root['tag'];\n      let t = this.affixService.getAffOption(conjugation.affopt)['gloss'];\n      let vb = this.verbService.getVerb(v);\n      let p;\n      if (vb['thematic_relation'] === 'red') {\n        p = this.pronounService.getPronoun(conjugation.pronoun['agent'])['gloss'];\n      } else if (vb['thematic_relation'] === 'blue') {\n        p = this.pronounService.getPronoun(conjugation.pronoun['patient'])['gloss'];\n      } else {\n        p =\n          this.pronounService.getPronoun(conjugation.pronoun['agent'])['gloss'] +\n          ' > ' +\n          this.pronounService.getPronoun(conjugation.pronoun['patient'])['obj_gloss'];\n      }\n      const val = this.returnValue(conjugation);\n\n      if (order === 'TP') {\n        node = merge(node, { [v]: { [t]: { [p]: val } } });\n      } else {\n        node = merge(node, { [v]: { [p]: { [t]: val } } });\n      }\n    }\n\n    for (const verb of Object.keys(node)) {\n      verbs.push(verb);\n      let nv = { name: verb, children: [] };\n      for (const second of Object.keys(node[verb])) {\n        const ns = { name: second, children: [] };\n        for (const third of Object.keys(node[verb][second])) {\n          let nt = {\n            name: third,\n            children: [{ name: node[verb][second][third] }]\n          };\n          ns['children'].push(nt);\n        }\n        nv['children'].push(ns);\n      }\n      data.push(nv);\n    }\n\n    let top = 0;\n    let initialTreeDepth = 0;\n    if (verbs.length < 2) {\n      initialTreeDepth = depth;\n    } else {\n      // verbs.forEach(v => {\n      //   chartOption.legend['data'].push({\n      //     name: v,\n      //     icon: 'rectangle'\n      //   });\n      // });\n    }\n    for (var j = 0; j < data.length; j++) {\n      top += 20;\n      let ser = {\n        type: 'tree',\n        name: data[j]['name'],\n        data: [data[j]],\n        top: top.toString() + '%',\n        left: '12%',\n        bottom: '25%',\n        right: '20%',\n        symbolSize: 7,\n        initialTreeDepth: initialTreeDepth,\n        label: {\n          normal: {\n            position: 'bottom',\n            verticalAlign: 'middle',\n            align: 'middle'\n          }\n        },\n        leaves: {\n          label: {\n            normal: {\n              position: 'top',\n              verticalAlign: 'middle',\n              align: 'middle'\n            }\n          }\n        },\n        expandAndCollapse: true,\n        roam: true,\n        animationDuration: 550,\n        animationDurationUpdate: 750\n      };\n      chartOption.series.push(ser);\n    }\n    return chartOption;\n  }\n\n  returnValue(conjugation) {\n    let morphemes = [conjugation.root, conjugation.pronoun].concat(conjugation.affixes);\n    morphemes = morphemes.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    return morphemes.map(m => m.value).join('');\n  }\n\n  createChart(tableargs, order, depth) {\n    return this.conjugationService\n      .conjugate(tableargs)\n      .pipe(map(res => this.createChartData(res, order, depth)));\n  }\n\n  isString(val) {\n    return typeof val === 'string';\n  }\n\n  toggleExplorer() {\n    this.showExplorer = !this.showExplorer;\n    this.conjugate();\n  }\n\n  download() {\n    const query_args = this.conjugationService\n      .createRequestUrl(this.selectionService.selection)\n      .toString();\n    const query_args_docx = this.conjugationService\n      .createRequestUrl(this.selectionService.selection, [\n        { param: 'docx', value: 'true' }\n      ])\n      .toString();\n    const url = this.conjugationService.path + '?' + query_args;\n    const docx_url = this.conjugationService.path + '?' + query_args_docx;\n    this.http.get(url).subscribe(\n      data => {\n        console.log(data);\n        window.location.href = docx_url;\n        this.updateToast(data);\n      },\n      error => {\n        console.log(error);\n        this.updateToast(false, error.status);\n      }\n    );\n  }\n\n  updateToast(success?, code = 200) {\n    if (success) {\n      this.toastr.success('File succesfully downloaded');\n    } else {\n      this.toastr.error(\n        'This file couldn\\'t be downloaded. Please make sure your conjugation is valid.',\n        'Whoops!'\n      );\n    }\n  }\n\n}\n","<div class=\"panel\" *ngIf=\"settings$ | async as settings\">\n    <div *ngIf=\"show_toolbar\" class=\"panel__header\">\n        <h3 class=\"panel__title\">Conjugation toolbar</h3>\n        <div class=\"panel__toolbar toolbar\">\n            <button class=\"conjugate mat-accent\" mat-raised-button (click)=\"conjugate()\">\n                Conjugate\n            </button>\n            <select *ngIf=\"showExplorer\" [(ngModel)]=\"depth\" (ngModelChange)=\"conjugate()\"\n                class=\"toolbar__tool ui-button\" matTooltip=\"Select how many nodes to display\"\n                [matTooltipShowDelay]=\"showDelay.value\" [matTooltipHideDelay]=\"hideDelay.value\"\n                [matTooltipPosition]=\"tooltipPosition\">\n                <option value=\"0\">0</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n            </select>\n            <button *ngIf=\"showExplorer\" class=\"toolbar__tool ui-button\" mat-icon-button\n                (click)=\"order = !order; conjugate()\" matTooltip=\"Switch pronoun and tense nodes\"\n                [matTooltipShowDelay]=\"showDelay.value\" [matTooltipHideDelay]=\"hideDelay.value\"\n                [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Switch pronoun and temp\">cached</mat-icon>\n            </button>\n            <button class=\"ui-button toolbar__tool\" mat-icon-button (click)=\"toggleExplorer()\"\n                matTooltip=\"Switch between grid and tree views\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon *ngIf=\"!showExplorer\" aria-label=\"Conjugate\">create</mat-icon>\n                <mat-icon *ngIf=\"showExplorer\" aria-label=\"Conjugate\">grid_on</mat-icon>\n            </button>\n            <button (click)=\"download()\" *ngIf=\"!showExplorer\" class=\"ui-button toolbar__tool\" mat-icon-button\n                matTooltip=\"Download conjugations as file\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Download conjugations\">get_app</mat-icon>\n            </button>\n            <button (click)=\"show_toolbar = !show_toolbar\" class=\"ui-button toolbar__tool\" mat-icon-button\n                matTooltip=\"Hide toolbar\" [matTooltipShowDelay]=\"showDelay.value\"\n                [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n                <mat-icon aria-label=\"Hide toolbar\">cancel</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"panel__underline height-5\">\n        <hr *ngIf=\"show_toolbar\" />\n        <button *ngIf=\"!show_toolbar\" (click)=\"show_toolbar = !show_toolbar\" class=\"float-right ui-button toolbar__tool\"\n            mat-icon-button matTooltip=\"Show toolbar\" [matTooltipShowDelay]=\"showDelay.value\"\n            [matTooltipHideDelay]=\"hideDelay.value\" [matTooltipPosition]=\"tooltipPosition\">\n            <mat-icon aria-label=\"Show toolbar\">add_circle</mat-icon>\n        </button>\n    </div>\n    <div class=\"panel__content\">\n        <div>\n            <h3 class=\"desktop-only center-text margin-top-100 padding-20\" *ngIf=\"!response$ && !showExplorer\">\n                Please select one or more boxes from the <b>Person</b>, <b>Time</b> and\n                <b>Verb</b> panels and then press the enter key or conjugate button to\n                see your selection\n            </h3>\n            <h3 class=\"mobile-only padding-15 center-text\" *ngIf=\"!response$ && !showExplorer\">\n                Please select one or more boxes from the 'Person', 'Time' and 'Verb'\n                panels. <br />\n                and then press the button above to conjugate!\n            </h3>\n            <ng-template #spinner>\n                <ng-container *ngIf=\"loading && !(response$ | async)\">\n                    <mat-spinner class=\"centered margin-top-100\"></mat-spinner>\n                </ng-container>\n            </ng-template>\n        </div>\n\n        <div *ngIf=\"showExplorer\" class=\"full-width full-height\">\n            <div *ngIf=\"chart_response\">\n                <!-- <div #explorer echarts [options]=\"chart_response\" class=\"demo-chart\"></div> -->\n            </div>\n        </div>\n\n        <div *ngIf=\"!showExplorer\">\n            <div id=\"table-container\" class=\"rel\" *ngIf=\"response$ | async as response; else spinner\">\n                <div class=\"error__container\" *ngIf=\"isString(response)\">\n                    <h3 class=\"error__header\">\n                        Error\n                    </h3>\n                    <p class=\"error__message\">{{ response }}</p>\n                    <p class=\"error__message\">\n                        Please remove some of the checked options described above and try\n                        again.\n                    </p>\n                </div>\n                <table class=\"full-width abs\" *ngIf=\"!isString(response)\">\n                    <thead>\n                        <tr>\n                            <th>\n                                <h3>{{ 'ww.language' | translate }}</h3>\n                            </th>\n                            <th *ngIf=\"settings?.level.english_tier || settings?.level.translation_tier\">\n                                <h3>English</h3>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr class=\"b--bottom\" *ngFor=\"let conjugation of response\">\n                            <td class=\"center-text\">\n                                <h3 id=\"main\">\n                                    <span *ngFor=\"let item of conjugation['main']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] }}</span>\n                                </h3>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.breakdown_tier\">\n                                    <span *ngFor=\"let item of conjugation['main']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['main'].indexOf(item) < conjugation['main'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.gloss_tier\">\n                                    <span *ngFor=\"let item of conjugation['secondary']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\" [ngClass]=\"{\n                        highlight:\n                          (settings?.highlight)[item['type']] ||\n                          (settings?.highlight)[item['classes']]}\">{{ item[\"value\"] | decapitalize }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['secondary'].indexOf(item) < conjugation['secondary'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                            </td>\n                            <td class=\"center-text\">\n                                <h4 id=\"main\" *ngIf=\"settings?.level.translation_tier\" class=\"no-padding header-text\">\n                                    <span class=\"translation\">{{ conjugation[\"translation\"] }}</span>\n                                </h4>\n                                <h5 id=\"main\" *ngIf=\"settings?.level.english_tier\">\n                                    <span *ngFor=\"let item of conjugation['ternary']\"\n                                        class=\"{{ item['classes'] }} no-padding header-text\"\n                                        [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']] }\">{{ item[\"value\"] | decapitalize }}\n                                        <span class=\"gloss-dividers header-text\"\n                                            *ngIf=\"conjugation['ternary'].indexOf(item) < conjugation['ternary'].length - 1\">-</span>\n                                    </span>\n                                </h5>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Pronoun } from '../../../models/models';\nimport { PronounService } from '../../../core/core.module';\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nimport { FormControl, FormGroup } from '@angular/forms'\n\n@Component({\n  selector: 'ww-tableviewer-pers-panel',\n  templateUrl: './tableviewer-pers-panel.component.html',\n  styleUrls: ['./tableviewer-pers-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerPersPanelComponent implements OnInit {\n  agCheckboxGroup: FormGroup = new FormGroup({});\n  agCheckboxPossibleValues: Observable<Pronoun[]> = this.pnService.pronouns$.pipe(\n    map(values => {\n      values.forEach(value => { this.agCheckboxGroup.addControl(value['tag'], new FormControl(this.agCheckedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n  )\n  agCheckedValues: string[] = []\n  patCheckboxGroup: FormGroup = new FormGroup({});\n  patCheckboxPossibleValues: Observable<Pronoun[]> = this.pnService.pronouns$.pipe(\n    map(values => {\n      values.forEach(value => { this.patCheckboxGroup.addControl(value['tag'], new FormControl(this.patCheckedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n  )\n  patCheckedValues: string[] = []\n  chosenPro;\n  role = 'agent';\n  limit = 8;\n  selectAllAg = false;\n  selectAllPat = false;\n  constructor(private pnService: PronounService, private selectionService: TableviewerSelectionService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  pushAgChanges(c) {\n    this.selectionService.updateAgents(c)\n  }\n\n  pushPatChanges(c) {\n    this.selectionService.updatePatients(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  toggleSelectAll() {\n    if (this.role === 'agent') {\n      this.selectAllAg = !this.selectAllAg\n      this.agCheckboxPossibleValues.subscribe(pns => { pns.forEach(pn => this.agCheckboxGroup.controls[pn.tag].setValue(this.selectAllAg)) })\n    } else if (this.role === 'patient') {\n      this.selectAllPat = !this.selectAllPat\n      this.patCheckboxPossibleValues.subscribe(pns => { pns.forEach(pn => this.patCheckboxGroup.controls[pn.tag].setValue(this.selectAllPat)) })\n    }\n  }\n\n  checkRole() {\n    console.log(this.role)\n  }\n}\n","<div class='panel'>\n    <div class='panel__header'>\n      <h3 class='panel__title'>Person</h3>\n      <!-- <hr class='panel__underline'> -->\n      <div class='panel__toolbar--right toolbar'>\n        <mat-button-toggle-group class=\"toolbar__tool\" name=\"fontStyle\" aria-label=\"Font Style\" [(ngModel)]=\"role\" (ngModelChange)=\"checkRole()\">\n          <mat-button-toggle value=\"agent\" class=\"bg-red\" [class.color-white]=\"role !== 'patient'\" [class.faded]=\"role === 'patient'\">Agent</mat-button-toggle>\n          <mat-button-toggle value=\"patient\" class=\"bg-blue\" [class.color-white]=\"role !== 'agent'\" [class.faded]=\"role === 'agent'\">Patient</mat-button-toggle>\n        </mat-button-toggle-group>\n        <button *ngIf=\"!selectAllAg && role === 'agent'\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAllAg && role === 'agent'\" class=\"toolbar__tool bg-red color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"!selectAllPat && role === 'patient'\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAllPat && role === 'patient'\" class=\"toolbar__tool bg-blue color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n      </div>\n    </div>\n  \n    <div class='panel__content'>\n      <mat-list [formGroup]=\"agCheckboxGroup\" class=\"panel__list pro one\" role=\"list\" *ngIf=\"role === 'agent'\">\n        <div *ngFor=\"let value of agCheckboxPossibleValues | async | slice:0:limit \">\n          <mat-checkbox [color]=\"'red'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"agCheckboxGroup\" class=\"panel__list pro two\" role=\"list\" *ngIf=\"role === 'agent'\">\n        <div *ngFor=\"let value of agCheckboxPossibleValues | async | slice:limit \">\n          <mat-checkbox [color]=\"'red'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"patCheckboxGroup\" class=\"panel__list pro one\" role=\"list\" *ngIf=\"role === 'patient'\">\n        <div *ngFor=\"let value of patCheckboxPossibleValues | async  | slice:0:limit \">\n          <mat-checkbox [color]=\"'blue'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n      <mat-list [formGroup]=\"patCheckboxGroup\" class=\"panel__list pro two\" role=\"list\" *ngIf=\"role === 'patient'\">\n        <div *ngFor=\"let value of patCheckboxPossibleValues | async  | slice:limit \">\n          <mat-checkbox [color]=\"'blue'\" [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n        </div>\n      </mat-list>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { RequestParams } from '../../models/models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableviewerSelectionService {\n  selection: RequestParams = { 'root': [], 'aff-option': [], 'patient': [], 'agent': [] };\n  constructor() { }\n\n  updateVerbs(v) {\n    this.selection['root'] = v\n  }\n\n  updateAgents(a) {\n    this.selection['agent'] = a;\n  }\n\n  updatePatients(p) {\n    this.selection['patient'] = p;\n  }\n\n  updateAffOptions(ao) {\n    this.selection['aff-option'] = ao;\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { AffOption } from '../../../models/models';\nimport { AffixService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ww-tableviewer-temp-panel',\n  templateUrl: './tableviewer-temp-panel.component.html',\n  styleUrls: ['./tableviewer-temp-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerTempPanelComponent implements OnInit {\n  checkboxGroup: FormGroup = new FormGroup({});\n  checkboxPossibleValues: Observable<AffOption[]> = this.affixService.affoptions$.pipe(\n    map(values => {\n      values.forEach(value => { this.checkboxGroup.addControl(value['tag'], new FormControl(this.checkedValues.indexOf(value['tag']) !== -1)) }); return values\n    }))\n  checkedValues: string[] = []\n  chosenTimes = [];\n  selectAll = false;\n  constructor(private affixService: AffixService, private selectionService: TableviewerSelectionService) { }\n\n  ngOnInit(): void {\n  }\n\n  pushChanges(c) {\n    this.selectionService.updateAffOptions(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  toggleSelectAll() {\n    this.selectAll = !this.selectAll\n    this.checkboxPossibleValues.subscribe(ts => { ts.forEach(t => this.checkboxGroup.controls[t.tag].setValue(this.selectAll)) })\n  }\n\n\n}\n","<div class=\"panel\">\n    <div class=\"panel__header\">\n      <h3 class=\"panel__title\">Time</h3>\n      <div class=\"panel__toolbar toolbar\">\n        <button *ngIf=\"!selectAll\" class=\"toolbar__tool\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n        <button *ngIf=\"selectAll\" class=\"toolbar__tool bg-accent margin-right-15 color-white\" mat-icon-button (click)=\"toggleSelectAll()\">\n          <mat-icon aria-label=\"Select all\">done_all</mat-icon>\n        </button>\n      </div>\n    </div>\n    <mat-list role=\"list\" class=\"list panel__list\">\n      <div [formGroup]=\"checkboxGroup\" *ngFor=\"let value of checkboxPossibleValues | async \">\n        <mat-checkbox [formControlName]=\"value.tag\">{{ value.gloss }}</mat-checkbox>\n      </div>\n    </mat-list>\n  </div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Verb } from '../../../models/models';\nimport { VerbService } from '../../../core/core.module';\nimport { TableviewerSelectionService } from '../tableviewer-selection.service';\nimport { Observable, Subject } from 'rxjs'\nimport { debounceTime, map } from 'rxjs/operators'\n\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ww-tableviewer-verb-panel',\n  templateUrl: './tableviewer-verb-panel.component.html',\n  styleUrls: ['./tableviewer-verb-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerVerbPanelComponent implements OnInit {\n  verbs$: Observable<Verb[]> = this.verbService.verbs$;\n  checkboxGroup: FormGroup = new FormGroup({});\n  checkboxPossibleValues: Observable<Verb[]>;\n  checkedValues: string[] = []\n  settings;\n  increment = 1000;\n  bottomLimit = 0;\n  topLimit: number\n  viewableVerbs: Verb[];\n  selection = [];\n  searchField: FormControl;\n  verbForm: FormGroup;\n  verbSubscription;\n  constructor(public verbService: VerbService, private fb: FormBuilder, public selectionService: TableviewerSelectionService) {\n    // initialize form with list of checkboxes\n    this.verbSubscription = this.verbs$.subscribe(values => {\n      values.forEach(value => { this.checkboxGroup.addControl(value['tag'], new FormControl(this.checkedValues.indexOf(value['tag']) !== -1)) }); return values\n    })\n\n    // subscribe to search input\n    this.searchField = new FormControl();\n    this.verbForm = this.fb.group({ search: this.searchField })\n    this.searchField.valueChanges.pipe(\n      debounceTime(100),\n      map(term => { return this.getEntriesFrom(term) })\n    ).subscribe((result) => {\n      this.viewableVerbs = result;\n    })\n\n\n    // create selection observable\n    this.checkboxGroup.valueChanges.subscribe(c => { c = this.filterTrue(c); if (c) { this.pushChanges(c) } })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n    this.verbSubscription.unsubscribe();\n  }\n\n  pushChanges(c) {\n    this.selectionService.updateVerbs(c)\n  }\n\n  filterTrue(c) {\n    return Object.keys(c)\n      .filter(k => { return c[k] })\n  }\n\n  getEntriesFrom(term) {\n    let vbs = this.verbService.verbs.filter(v => { return this.filterEntries(v, term) }\n    ).slice(this.bottomLimit, this.increment)\n    return vbs\n  }\n\n  filterEntries(v, term) {\n    return (v.gloss.toLowerCase().indexOf(term.toLowerCase()) > -1 || v.tag.toLowerCase().indexOf(term.toLowerCase()) > -1)\n  }\n\n\n  swipePrev() {\n    if (this.bottomLimit - this.increment > 0) {\n      this.bottomLimit -= this.increment;\n      // this.topLimit -= this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    } else {\n      this.bottomLimit = 0;\n      // this.topLimit = this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    }\n  }\n\n  swipeNext() {\n    if (this.bottomLimit + this.increment < this.topLimit) {\n      this.bottomLimit += this.increment;\n      // this.topLimit += this.increment;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    } else {\n      this.bottomLimit = this.topLimit - this.increment;\n      // this.topLimit = this.verbs.length;\n      // this.viewableVerbs = this.verbs.slice(this.bottomLimit, this.topLimit)\n    }\n  }\n\n  remove(verb) {\n    this.checkboxGroup.controls[verb].setValue(false)\n  }\n}\n","<div class='panel'>\n    <div class='panel__header'>\n      <h3 class=\"panel__title\">Verb</h3>\n      <mat-chip-list class=\"panel__toolbar toolbar\">\n        <mat-chip class='toolbar__tool' [ngClass]=\"'bg-' + verbService.getVerb(verb)['thematic_relation']\" *ngFor=\"let verb of selectionService.selection.root\"\n          [selectable]=\"true\" [removable]=\"true\" (removed)=\"remove(verb)\">\n          {{verbService.getVerb(verb)['display']}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n      </mat-chip-list>\n    </div>\n    <div class=\"panel__content\">\n      <form class='margin-20'>\n        <div>\n          <mat-form-field [formGroup]=\"verbForm\">\n            <input autocomplete=\"off\" type=\"text\" placeholder=\"Type a verb\" aria-label=\"Number\" matInput formControlName=\"search\">\n          </mat-form-field>\n        </div>\n      </form>\n      <mat-list class='panel__list' role=\"list\" *ngIf=\"viewableVerbs && searchField.value !== ''\">\n        <div [formGroup]=\"checkboxGroup\" *ngFor=\"let value of viewableVerbs\">\n          <mat-checkbox class='margin-5' [formControlName]=\"value.tag\" [disabled]=\"selectionService.selection.root.indexOf(value.tag) < 0 && selectionService.selection.root.length >= 3\">{{\n            value.gloss + \" - \" }}\n            <span [ngClass]=\"'color-' + value.thematic_relation\">{{value.display}}</span>\n          </mat-checkbox>\n        </div>\n      </mat-list>\n      <p class='margin-top-50 margin-30' *ngIf=\"searchField.value !== '' && searchField.value !== null && viewableVerbs?.length === 0\">Sorry,\n        we can't find any verbs that match '{{ searchField.value }}'</p>\n    </div>\n    \n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableviewerComponent } from './tableviewer/tableviewer.component';\nimport { TableviewerConjPanelComponent } from './tableviewer-conj-panel/tableviewer-conj-panel.component';\nimport { TableviewerPersPanelComponent } from './tableviewer-pers-panel/tableviewer-pers-panel.component';\nimport { TableviewerTempPanelComponent } from './tableviewer-temp-panel/tableviewer-temp-panel.component';\nimport { TableviewerVerbPanelComponent } from './tableviewer-verb-panel/tableviewer-verb-panel.component';\nimport { TableviewerSelectionService } from './tableviewer-selection.service';\nimport { SharedModule } from '../../shared/shared.module';\n\nexport {\n  TableviewerSelectionService\n}\n\n@NgModule({\n  declarations: [TableviewerComponent, TableviewerConjPanelComponent, TableviewerPersPanelComponent, TableviewerTempPanelComponent, TableviewerVerbPanelComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  providers: [\n    TableviewerSelectionService\n  ]\n})\nexport class TableviewerModule { }\n","import { Component, HostListener, OnInit, ViewChild, ChangeDetectionStrategy } from '@angular/core';\n\n// Imports\nimport { TableviewerConjPanelComponent } from '../tableviewer-conj-panel/tableviewer-conj-panel.component';\n\n\n@Component({\n  selector: 'ww-tableviewer',\n  templateUrl: './tableviewer.component.html',\n  styleUrls: ['./tableviewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableviewerComponent implements OnInit {\n  @ViewChild('conjPanel') conjPanel: TableviewerConjPanelComponent;\n  cols: number;\n  rows: number;\n  conjrowspan: number;\n  conjcolspan: number;\n  halfrowspan: number;\n  fullrowspan: number;\n  breakpoint = 1100;\n  useTestAPI = false;\n  @HostListener('document:keyup.enter', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // if (event.keyCode === 13) {\n      this.conjPanel.conjugate();\n    // }\n  }\n  constructor() { }\n\n  ngOnInit() {\n    this.cols = window.innerWidth <= this.breakpoint ? 3 : 12;\n    this.rows = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.conjcolspan = window.innerWidth <= this.breakpoint ? 3 : 6;\n    this.conjrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.halfrowspan = window.innerWidth <= this.breakpoint ? 1 : 1;\n    this.fullrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n  }\n\n  onResize(event) {\n    this.cols = event.target.innerWidth <= this.breakpoint ? 3 : 12;\n    this.rows = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.conjcolspan = window.innerWidth <= this.breakpoint ? 3 : 6;\n    this.conjrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n    this.halfrowspan = window.innerWidth <= this.breakpoint ? 1 : 1;\n    this.fullrowspan = window.innerWidth <= this.breakpoint ? 1 : 2;\n  }\n\n  conjugate() {\n    this.conjPanel.conjugate();\n  }\n\n}\n","<div class=\"container page__content vwidth-90 centered\">\n    <mat-grid-list class='margin-bottom-50' [cols]=\"cols\" rowHeight=\"18em\" (window:resize)=\"onResize($event)\">\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"halfrowspan\" class=\"br-tl b--left b--right b--top bg-white\">\n        <ww-tableviewer-pers-panel class='custom-scroll full-width full-height'></ww-tableviewer-pers-panel>\n      </mat-grid-tile>\n      <mat-grid-tile class=\"b--top b--left bg-white\" [colspan]=\"conjcolspan\" [rowspan]=\"conjrowspan\">\n        <ww-tableviewer-conj-panel #conjPanel class=\"custom-scroll full-width full-height\"></ww-tableviewer-conj-panel>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"fullrowspan\"\n        class=\"br--tr br--br b--left b--right b--top b--bottom bg-white\">\n        <ww-tableviewer-verb-panel class='custom-scroll full-width full-height'></ww-tableviewer-verb-panel>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"3\" [rowspan]=\"halfrowspan\" class=\"br--bl b--top b--left b--right b--bottom bg-white\">\n        <ww-tableviewer-temp-panel class='custom-scroll full-width'></ww-tableviewer-temp-panel>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <div class=\"height-100\"></div>\n  </div>"]}