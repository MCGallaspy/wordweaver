{"version":3,"sources":["webpack:///src/app/pages/settings/settings-routing.module.ts","webpack:///src/app/pages/settings/settings.module.ts","webpack:///src/app/pages/settings/settings/settings-container.component.ts","webpack:///src/app/pages/settings/settings/settings-container.component.html"],"names":["routes","path","component","data","title","SettingsRoutingModule","forChild","imports","exports","SettingsModule","declarations","SettingsContainerComponent","store","routeAnimationsElements","themes","value","label","languages","settings$","pipe","language","dispatch","glossLevel","checked","breakdownLevel","breakdownTranslationLevel","translationLevel","rootHighlight","pronounHighlight","aspectHighlight","prepronominalPrefixHighlight","tmpAffixHighlight","postAspectualSuffixHighlight","testApi","theme","autoNightMode","stickyHeader","pageAnimations","elementsAnimations","selector","templateUrl","styleUrls","changeDetection","OnPush"],"mappings":"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","file":"pages-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsContainerComponent,\n    data: { title: 'ww.menu.settings' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\n})\nexport class SettingsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeGlossLevel,\n  actionSettingsChangeBreakdownLevel,\n  actionSettingsChangeBreakdownTranslationLevel,\n  actionSettingsChangeTranslationLevel,\n  actionSettingsChangeAspectHighlight,\n  actionSettingsChangePostAspectualSuffixHighlight,\n  actionSettingsChangePrepronominalPrefixHighlight,\n  actionSettingsChangePronounHighlight,\n  actionSettingsChangeRootHighlight,\n  actionSettingsChangeTmpAffixHighlight,\n  actionSettingsChangeTestApi,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader\n} from '../../../core/settings/settings.actions';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\n\n@Component({\n  selector: 'ww-settings',\n  templateUrl: './settings-container.component.html',\n  styleUrls: ['./settings-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: 'DEFAULT-THEME', label: 'blue' },\n    { value: 'LIGHT-THEME', label: 'light' },\n    { value: 'NATURE-THEME', label: 'nature' },\n    { value: 'BLACK-THEME', label: 'dark' }\n  ];\n\n  languages = [\n    { value: 'en', label: 'en' },\n    { value: 'fr', label: 'fr' }\n  ];\n\n  constructor(private store: Store<State>) { }\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onGlossLevelSelect({ checked: glossLevel }) {\n    this.store.dispatch(actionSettingsChangeGlossLevel({ glossLevel }));\n  }\n\n  onBreakdownLevelSelect({ checked: breakdownLevel }) {\n    this.store.dispatch(actionSettingsChangeBreakdownLevel({ breakdownLevel }));\n  }\n\n  onBreakdownTranslationLevelSelect({ checked: breakdownTranslationLevel }) {\n    this.store.dispatch(actionSettingsChangeBreakdownTranslationLevel({ breakdownTranslationLevel }));\n  }\n\n  onTranslationLevelSelect({ checked: translationLevel }) {\n    this.store.dispatch(actionSettingsChangeTranslationLevel({ translationLevel }));\n  }\n\n  onRootHighlightSelect({ checked: rootHighlight }) {\n    this.store.dispatch(actionSettingsChangeRootHighlight({ rootHighlight }))\n  }\n\n  onPronounHighlightSelect({ checked: pronounHighlight }) {\n    this.store.dispatch(actionSettingsChangePronounHighlight({ pronounHighlight }))\n  }\n\n  onAspectHighlightSelect({ checked: aspectHighlight }) {\n    this.store.dispatch(actionSettingsChangeAspectHighlight({ aspectHighlight }))\n  }\n\n  onPrepronominalPrefixHighlightHighlightSelect({ checked: prepronominalPrefixHighlight }) {\n    this.store.dispatch(actionSettingsChangePrepronominalPrefixHighlight({ prepronominalPrefixHighlight }))\n  }\n\n  onTmpAffixHighlightSelect({ checked: tmpAffixHighlight }) {\n    this.store.dispatch(actionSettingsChangeTmpAffixHighlight({ tmpAffixHighlight }))\n  }\n\n  onPostAspectualSuffixHighlightSelect({ checked: postAspectualSuffixHighlight }) {\n    this.store.dispatch(actionSettingsChangePostAspectualSuffixHighlight({ postAspectualSuffixHighlight }))\n  }\n\n  onTestApiToggle({ checked: testApi }) {\n    this.store.dispatch(actionSettingsChangeTestApi({ testApi }))\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h1>{{ 'ww.settings.title' | translate }}</h1>\n    </div>\n  </div>\n  <br>\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class='row'>\n      <div class='col-md-6 group' [ngClass]='routeAnimationsElements'>\n        <h2>{{ 'ww.settings.general.highlighting' | translate }}</h2>\n        <div class='icon-form-field checkboxes'>\n          <mat-checkbox class=\"pronouns\" [checked]=\"settings.pronounHighlight\" (change)=\"onPronounHighlightSelect($event)\">\n            Pronouns\n          </mat-checkbox>\n          <mat-checkbox class=\"root\" [checked]=\"settings.rootHighlight\" (change)=\"onRootHighlightSelect($event)\">\n            Verb\n          </mat-checkbox>\n          <mat-checkbox class=\"aspect\" [checked]=\"settings.aspectHighlight\" (change)=\"onAspectHighlightSelect($event)\">\n            Aspect\n          </mat-checkbox>\n          <mat-checkbox class=\"prepronominal_prefix\" [checked]=\"settings.prepronominalPrefixHighlight\"\n            (change)=\"onPrepronominalPrefixHighlightHighlightSelect($event)\">\n            Required\n          </mat-checkbox>\n          <mat-checkbox class=\"tmp_affix\" [checked]=\"settings.tmpAffixHighlight\" (change)=\"onTmpAffixHighlightSelect($event)\">\n            Temp\n          </mat-checkbox>\n          <mat-checkbox class=\"post_aspectual_suffix\" [checked]=\"settings.postAspectualSuffixHighlight\"\n            (change)=\"onPostAspectualSuffixHighlightSelect($event)\">\n            Post Aspectual Suffix\n          </mat-checkbox>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <br>\n    <div class='row'>\n      <div class='col-md-6 group' [ngClass]='routeAnimationsElements'>\n        <h2>{{ 'ww.settings.general.tiers' | translate }}</h2>\n        <div class='icon-form-field checkboxes'>\n          <mat-checkbox [checked]=\"settings.glossLevel\"  (change)=\"onGlossLevelSelect($event)\">\n            Gloss Tier\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.breakdownLevel\" (change)=\"onBreakdownLevelSelect($event)\">\n            Breakdown Tier\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.breakdownTranslationLevel\"\n            (change)=\"onBreakdownTranslationLevelSelect($event)\">\n            Breakdown Translation Tier\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.translationLevel\" (change)=\"onTranslationLevelSelect($event)\">\n            Translation Tier\n          </mat-checkbox>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'ww.settings.general.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"language\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'ww.settings.general.placeholder' | translate\" [ngModel]=\"settings.language\"\n              (selectionChange)=\"onLanguageSelect($event)\" name=\"language\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l.value\">\n                {{ 'ww.settings.general.language.' + l.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"bars\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'ww.settings.themes.sticky-header' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.stickyHeader\" (change)=\"onStickyHeaderToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'ww.settings.themes.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'ww.settings.themes.placeholder' | translate\" [ngModel]=\"settings.theme\"\n              (selectionChange)=\"onThemeSelect($event)\" name=\"themes\">\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\n                {{ 'ww.settings.themes.' + t.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'ww.settings.themes.night-mode' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.autoNightMode\" (change)=\"onAutoNightModeToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-placeholder>{{ 'ww.settings.advanced' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.test_api\" (change)=\"onTestApiToggle($event)\">\n            {{ 'ww.settings.testApi' | translate}}\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>"]}