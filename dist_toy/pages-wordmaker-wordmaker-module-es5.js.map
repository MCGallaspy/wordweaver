{"version":3,"sources":["webpack:///src/app/core/animations/value.animations.ts","webpack:///src/app/pages/wordmaker/wordmaker-conj-step/wordmaker-conj-step.component.ts","webpack:///src/app/pages/wordmaker/wordmaker-conj-step/wordmaker-conj-step.component.html","webpack:///src/app/pages/wordmaker/wordmaker-home/wordmaker-home.component.ts","webpack:///src/app/pages/wordmaker/wordmaker-home/wordmaker-home.component.html","webpack:///src/app/pages/wordmaker/wordmaker-pers-step/wordmaker-pers-step.component.ts","webpack:///src/app/pages/wordmaker/wordmaker-pers-step/wordmaker-pers-step.component.html","webpack:///src/app/pages/wordmaker/wordmaker-routing.module.ts","webpack:///src/app/pages/wordmaker/wordmaker-temp-step/wordmaker-temp-step.component.ts","webpack:///src/app/pages/wordmaker/wordmaker-temp-step/wordmaker-temp-step.component.html","webpack:///src/app/pages/wordmaker/wordmaker-verb-step/wordmaker-verb-step.component.ts","webpack:///src/app/pages/wordmaker/wordmaker-verb-step/wordmaker-verb-step.component.html","webpack:///src/app/pages/wordmaker/wordmaker.module.ts","webpack:///src/app/pages/wordmaker/wordmaker/wordmaker.component.ts","webpack:///src/app/pages/wordmaker/wordmaker/wordmaker.component.html"],"names":["fadeAnimation","opacity","optional","listAnimation","WordmakerConjStepComponent","store","selectionService","conjugationService","settings$","pipe","word$","selection$","selection","root","thematic_relation","agent","patient","args","Object","entries","reduce","a","k","v","tag","conjugate","conjugations","createTiers","selector","templateUrl","styleUrls","changeDetection","OnPush","WordmakerHomeComponent","routeAnimationsElements","WordmakerPersStepComponent","pronounService","selectedPers","pronouns$","role","pn","transitive","selectedAgent","selectedPatient","emit","routes","path","component","data","title","WordmakerRoutingModule","forChild","imports","exports","WordmakerTempStepComponent","affixService","selectedTemp","temps$","returnAffoptFromTag$","subscribe","t","affoptions$","affopts","picked_ao","filter","ao","gloss","WordmakerVerbStepComponent","verbService","fb","viewableVerbs$","language","display_language","selectedVerb","searchField","verbForm","group","search","verbs$","x","next","valueChanges","console","log","term","filterEntries","verbs","toLowerCase","indexOf","verb","animations","WordmakerModule","declarations","WordmakerComponent","formBuilder","notificationService","translate","isLinear","verbLabel","persLabel","tempLabel","verbFormGroup","verbCtrl","required","controls","updateVerb","persFormGroup","persCtrl","label","updateAgent","updatePatient","tempFormGroup","tempCtrl","updateAffOption","currentStep$","stepper","selectedIndex","Math","floor","random","length","type","value","onVerbSelect","randomX","onPersSelect","pronouns","onTempSelect","affixoptions","$event","reset","setValue","translated","completed","selectRandomIfNull"],"mappings":"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","file":"pages-wordmaker-wordmaker-module-es5.js","sourcesContent":["import {\n  animate,\n  group,\n  query,\n  style,\n  transition,\n  trigger,\n  stagger,\n  sequence\n} from \"@angular/animations\";\n\nexport const fadeAnimation = trigger(\"fadeAnimation\", [\n  transition(\"* <=> *\", [\n    query(\n      \":enter\",\n      [style({ opacity: 0 }), animate(\"3000ms\", style({ opacity: 1 }))],\n      { optional: true }\n    ),\n    query(\n      \":leave\",\n      [style({ opacity: 1 }), animate(\"3000ms\", style({ opacity: 0 }))],\n      { optional: true }\n    )\n  ])\n]);\n\nexport const listAnimation = trigger(\"listAnimation\", [\n  transition(\"* <=> *\", [\n    query(\n      \":enter\",\n      [\n        style({ opacity: 0 }),\n        stagger(\"10ms\", animate(\"300ms ease-out\", style({ opacity: 1 })))\n      ],\n      { optional: true }\n    )\n    // query(':leave',\n    // [style({ opacity: 1 }), stagger('10ms', animate('50ms ease-out', style({ opacity: 0 })))],\n    // { optional: true }\n    // )\n  ])\n]);\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from \"@angular/core\";\nimport { Conjugation } from \"../../../models/models\";\nimport { Observable, EMPTY } from \"rxjs\";\nimport { switchMap, map } from \"rxjs/operators\";\nimport { SettingsState, State } from \"../../../core/settings/settings.model\";\nimport { Store, select } from \"@ngrx/store\";\nimport { selectSettings } from \"../../../core/settings/settings.selectors\";\nimport {\n  ConjugationService,\n  WordmakerSelectionService\n} from \"../../../core/core.module\";\n\n@Component({\n  selector: \"ww-wordmaker-conj-step\",\n  templateUrl: \"./wordmaker-conj-step.component.html\",\n  styleUrls: [\"./wordmaker-conj-step.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WordmakerConjStepComponent implements OnInit {\n  word$: Observable<any>;\n  settings$: Observable<SettingsState>;\n  constructor(\n    private store: Store<State>,\n    private selectionService: WordmakerSelectionService,\n    private conjugationService: ConjugationService\n  ) {}\n\n  ngOnInit(): void {\n    this.settings$ = this.store.pipe(select(selectSettings));\n    this.word$ = this.selectionService.selection$.pipe(\n      switchMap(selection => {\n        if (\n          selection.root &&\n          ((selection.root.thematic_relation === \"purple\" &&\n            selection.agent &&\n            selection.patient) ||\n            (selection.root.thematic_relation === \"red\" && selection.agent) ||\n            (selection.root.thematic_relation === \"blue\" && selection.patient))\n        ) {\n          const args = Object.entries(selection).reduce(\n            (a, [k, v]) => (v == null ? a : { ...a, [k]: [v.tag] }),\n            {}\n          );\n          return this.conjugationService\n            .conjugate(args)\n            .pipe(\n              map(conjugations =>\n                this.conjugationService.createTiers(conjugations)\n              )\n            );\n        } else {\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n","<div class=\"margin-top-20 panel centered full-width\">\n    <div class='panel__header'>\n        <div class='container'>\n            <div class='row'>\n                <p class=\"margin-0 font-lg\">{{ 'ww.wordmaker.conj.congratulations-header' | translate }}!</p>\n            </div>\n            <div class='row'>\n                <br>\n            </div>\n            <div class='row'>\n                <div class='congratulations col-sm-12'>\n                    <p class=\"font-lg\" [innerHTML]=\"'ww.wordmaker.conj.congratulations-text' | translate\">\n                    </p>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <hr class='margin-bottom-50'>\n    <div class='panel__content' *ngIf=\"settings$ | async as settings\">\n        <div id=\"conjugation-result\" class=\"conjugation center-text\" *ngFor=\"let conjugation of word$ | async\">\n            <h3>\n                <span *ngFor=\"let item of conjugation['main']\" class=\"{{ item['classes'] }}\"\n                    [ngClass]=\"{highlight: (settings?.highlight)[item['type']] || (settings?.highlight)[item['classes']]}\">\n                    {{ item[\"value\"] }}</span>\n            </h3>\n            <h4 *ngIf=\"settings?.level.breakdown\">\n                <span *ngFor=\"let item of conjugation['main']\" class=\"{{ item['classes'] }}\" [ngClass]=\"{\n            highlight:\n              (settings?.highlight)[item['type']] ||\n              (settings?.highlight)[item['classes']]\n          }\">{{ item[\"value\"] }}\n                    <span *ngIf=\"conjugation['main'].indexOf(item) < conjugation['main'].length - 1\">-</span>\n                </span>\n            </h4>\n            <h4 *ngIf=\"settings?.level.gloss\">\n                <span *ngFor=\"let item of conjugation['secondary']\" class=\"{{ item['classes'] }}\" [ngClass]=\"{\n            highlight:\n              (settings?.highlight)[item['type']] ||\n              (settings?.highlight)[item['classes']]\n          }\">{{ item[\"value\"] | decapitalize }}\n                    <span *ngIf=\"conjugation['secondary'].indexOf(item) < conjugation['secondary'].length - 1\">-</span>\n                </span>\n            </h4>\n            <h4 *ngIf=\"settings?.level['breakdown-translation']\">\n                <span *ngFor=\"let item of conjugation['ternary']\" class=\"{{ item['classes'] }}\" [ngClass]=\"{\n            highlight:\n              (settings?.highlight)[item['type']] ||\n              (settings?.highlight)[item['classes']]\n          }\">{{ item[\"value\"] | decapitalize }}\n                    <span *ngIf=\"conjugation['ternary'].indexOf(item) < conjugation['ternary'].length - 1\">-</span>\n                </span>\n            </h4>\n            <h4 *ngIf=\"settings?.level.translation\">\n                <span>{{ conjugation[\"translation\"] }} </span>\n            </h4>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ROUTE_ANIMATIONS_ELEMENTS } from \"../../../core/core.module\";\n\n@Component({\n  selector: \"ww-wordmaker-home\",\n  templateUrl: \"./wordmaker-home.component.html\",\n  styleUrls: [\"./wordmaker-home.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WordmakerHomeComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class='container page page__content vwidth-90 centered center-text'>\n    <div class='welcome margin-top-100'>\n        <div [ngClass]=\"routeAnimationsElements\">\n            <h2>{{ 'ww.wordmaker.home.welcome' | translate }}</h2>\n            <div [innerHTML]=\"'ww.wordmaker.home.instructions' | translate\"></div>\n            <button mat-fab class='ui-button mat-fab mat-accent' id='start' routerLink=\"stepper\">{{ 'ww.wordmaker.home.start' | translate }}</button>\n        </div>\n    </div>\n</div>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from \"@angular/core\";\nimport { PronounService } from \"../../../core/core.module\";\nimport { Pronoun, Verb } from \"../../../models/models\";\nimport { Observable } from \"rxjs\";\nimport { EChartOption } from \"echarts\";\n\n@Component({\n  selector: \"ww-wordmaker-pers-step\",\n  templateUrl: \"./wordmaker-pers-step.component.html\",\n  styleUrls: [\"./wordmaker-pers-step.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WordmakerPersStepComponent implements OnInit {\n  pronouns$: Observable<Pronoun[]>;\n  selectedAgent: Pronoun;\n  selectedPatient: Pronoun;\n  @Input() selectedVerb: Verb;\n  @Output() selectedPers = new EventEmitter<any>();\n  constructor(private pronounService: PronounService) {}\n\n  ngOnInit(): void {\n    this.pronouns$ = this.pronounService.pronouns$;\n  }\n\n  // TODO: refactor\n  select(role, pn, transitive) {\n    if (transitive) {\n      if (role === \"ag\") {\n        this.selectedAgent = pn;\n        if (this.selectedPatient) {\n          this.selectedPers.emit({\n            agent: this.selectedAgent,\n            patient: this.selectedPatient\n          });\n        } else {\n          this.selectedPers.emit({ agent: this.selectedAgent });\n        }\n      } else if (role === \"pat\") {\n        this.selectedPatient = pn;\n        if (this.selectedAgent) {\n          this.selectedPers.emit({\n            agent: this.selectedAgent,\n            patient: this.selectedPatient\n          });\n        } else {\n          this.selectedPers.emit({ patient: this.selectedPatient });\n        }\n      }\n    } else {\n      if (role === \"ag\") {\n        this.selectedPers.emit({ agent: pn });\n      } else if (role === \"pat\") {\n        this.selectedPers.emit({ patient: pn });\n      }\n    }\n  }\n}\n","<div class=\"margin-top-20 panel centered full-width\">\n    <ng-template #loading>\n        <mat-spinner class=\"centered\"></mat-spinner>\n    </ng-template>\n    <div class='panel__header--small'>\n        <div class='container'>\n            <div *ngIf=\"selectedVerb.thematic_relation !== 'purple'\" class='row'>\n                <br>\n            </div>\n            <div *ngIf=\"selectedVerb.thematic_relation !== 'purple'\" class='row'>\n                <br>\n            </div>\n            <div class='row'>\n                <div class='instructions col-sm-12'>\n                    <p *ngIf=\"selectedVerb.thematic_relation !== 'purple'\">{{ \"ww.wordmaker.pers.select-intransitive-pronoun\" | translate }}</p>\n                    <p *ngIf=\"selectedVerb.thematic_relation === 'purple'\">{{ \"ww.wordmaker.pers.select-transitive-pronoun\" | translate }}\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr class='margin-bottom-50'>\n    <div class='panel__content--large' *ngIf=\"pronouns$ | async as pronouns; else loading\">\n        <div class=\"pwidth-50--desktop pwidth-100--mobile centered\" *ngIf=\"selectedVerb.thematic_relation === 'blue'\">\n            <mat-chip-list>\n                <mat-chip class=\"bg-white border-accent color-black\" (click)=\"select('pat', pn, false)\"\n                    *ngFor=\"let pn of pronouns\">{{ pn.obj_gloss }}\n                    <mat-icon class=\"margin-left-5 color-blue icon-md\">person</mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n        </div>\n        <div class=\"pwidth-50--desktop pwidth-100--mobile centered\" *ngIf=\"selectedVerb.thematic_relation === 'red'\">\n            <mat-chip-list>\n                <mat-chip class=\"bg-white border-accent color-black\" (click)=\"select('ag', pn, false)\"\n                    *ngFor=\"let pn of pronouns\">{{ pn.obj_gloss }}\n                    <mat-icon class=\"margin-left-5 color-red icon-md\">person</mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n        </div>\n        <div class=\"pwidth-50--desktop pwidth-100--mobile centered\" *ngIf=\"selectedVerb.thematic_relation === 'purple'\">\n            <h5>{{ \"ww.wordmaker.pers.patient-informal\" | translate }}</h5>\n            <mat-chip-list>\n                <mat-chip class=\"border-accent\" (click)=\"select('ag', pn, true)\" *ngFor=\"let pn of pronouns\"\n                    [ngClass]=\"selectedAgent === pn ? 'color-white bg-red' : 'bg-white color-black'\">{{ pn.gloss }}\n                    <mat-icon class=\"margin-left-5 icon-md\"\n                        [ngClass]=\"selectedAgent === pn ? 'color-white' : 'color-red'\">person\n                    </mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n            <h5>{{ \"ww.wordmaker.pers.agent-informal\" | translate }}</h5>\n            <mat-chip-list>\n                <mat-chip class=\"bg-white border-accent\" (click)=\"select('pat', pn, true)\" *ngFor=\"let pn of pronouns\"\n                    [ngClass]=\"selectedPatient === pn ? 'color-white bg-blue' : 'bg-white color-black'\">\n                    {{ pn.obj_gloss }}\n                    <mat-icon class=\"margin-left-5 icon-md\"\n                        [ngClass]=\"selectedPatient === pn ? 'color-white' : 'color-blue'\">\n                        person\n                    </mat-icon>\n                </mat-chip>\n            </mat-chip-list>\n        </div>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { WordmakerComponent } from \"./wordmaker/wordmaker.component\";\nimport { WordmakerHomeComponent } from \"./wordmaker-home/wordmaker-home.component\";\n\nconst routes: Routes = [\n  {\n    path: \"stepper\",\n    component: WordmakerComponent,\n    data: { title: \"ww.menu.wordmaker.stepper\" }\n  },\n  {\n    path: \"\",\n    component: WordmakerHomeComponent,\n    data: { title: \"ww.menu.wordmaker.home\" }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WordmakerRoutingModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ChangeDetectionStrategy\n} from \"@angular/core\";\nimport { AffOption, Pronoun, Verb } from \"../../../models/models\";\nimport {\n  AffixService,\n  ConjugationService,\n  WordmakerSelectionService\n} from \"../../../core/core.module\";\nimport { Observable, empty, EMPTY } from \"rxjs\";\nimport { distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\nimport { select } from \"@ngrx/store\";\n\n@Component({\n  selector: \"ww-wordmaker-temp-step\",\n  templateUrl: \"./wordmaker-temp-step.component.html\",\n  styleUrls: [\"./wordmaker-temp-step.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WordmakerTempStepComponent implements OnInit {\n  temps$: Observable<any>;\n  @Input() selectedVerb: Verb;\n  @Input() selectedPers: any;\n  @Output() selectedTemp = new EventEmitter<AffOption>();\n  constructor(\n    private affixService: AffixService,\n    private conjugationService: ConjugationService,\n    private selectionService: WordmakerSelectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.temps$ = this.selectionService.selection$.pipe(\n      switchMap(selection => {\n        if (\n          selection.root &&\n          ((selection.root.thematic_relation === \"purple\" &&\n            selection.agent &&\n            selection.patient) ||\n            (selection.root.thematic_relation === \"red\" && selection.agent) ||\n            (selection.root.thematic_relation === \"blue\" && selection.patient))\n        ) {\n          const args = Object.entries(selection).reduce(\n            (a, [k, v]) => (v == null ? a : { ...a, [k]: [v.tag] }),\n            {}\n          );\n          args[\"aff-option\"] = [];\n          return this.conjugationService.conjugate(args);\n        } else {\n          return EMPTY;\n        }\n      })\n    );\n  }\n\n  onChipClick(tag) {\n    this.returnAffoptFromTag$(tag).subscribe(t => {\n      this.selectedTemp.emit(t);\n    });\n  }\n\n  returnAffoptFromTag$(tag) {\n    return this.affixService.affoptions$.pipe(\n      map(affopts => {\n        const picked_ao = affopts.filter(ao => ao[\"tag\"] === tag)[0];\n        return picked_ao;\n      })\n    );\n  }\n\n  returnAffoptFromGloss$(gloss) {\n    return this.affixService.affoptions$.pipe(\n      map(affopts => {\n        const picked_ao = affopts.filter(ao => ao[\"gloss\"] === gloss)[0];\n        return picked_ao;\n      })\n    );\n  }\n}\n","<div class=\"margin-top-20 panel centered full-width\">\n    <div class='panel__header--small'>\n        <div class='container'>\n            <div class='row'>\n                <br>\n            </div>\n            <div class='row'>\n                <br>\n            </div>\n            <div class='row'>\n                <div class='instructions col-sm-12'>\n                    <p>{{ \"ww.wordmaker.temp.select-temp\" | translate }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr class='margin-bottom-50'>\n    <div class='panel__content--large' *ngIf=\"temps$ | async as temps\">\n        <div class=\"pwidth-50--desktop pwidth-100--mobile centered\" *ngIf='temps.length > 0'>\n            <mat-chip-list>\n                <mat-chip (click)=\"onChipClick(temp.values.affopt)\" class=\"bg-white color-black border-accent\"\n                    *ngFor=\"let temp of temps\">{{ temp.translation }}</mat-chip>\n            </mat-chip-list>\n        </div>\n    </div>\n</div>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnInit,\n  Output\n} from \"@angular/core\";\nimport { VerbService } from \"../../../core/core.module\";\nimport { Verb } from \"../../../models/models\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, tap } from \"rxjs/operators\";\nimport { sortBy } from \"lodash\";\nimport { FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\nimport {\n  fadeAnimation,\n  listAnimation\n} from \"../../../core/animations/value.animations\";\n\n@Component({\n  selector: \"ww-wordmaker-verb-step\",\n  templateUrl: \"./wordmaker-verb-step.component.html\",\n  styleUrls: [\"./wordmaker-verb-step.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeAnimation, listAnimation]\n})\nexport class WordmakerVerbStepComponent implements OnInit {\n  viewableVerbs$ = new Subject<Verb[]>();\n  loading;\n  language = \"ww.language\";\n  display_language = \"english\";\n  searchField: FormControl;\n  verbForm: FormGroup;\n  @Output() selectedVerb = new EventEmitter<Verb>();\n  constructor(private verbService: VerbService, private fb: FormBuilder) {\n    // subscribe to search input\n    this.searchField = new FormControl();\n    this.verbForm = this.fb.group({ search: this.searchField });\n  }\n\n  ngOnInit(): void {\n    this.verbService.verbs$.subscribe(x => this.viewableVerbs$.next(x));\n    this.searchField.valueChanges\n      .pipe(\n        tap(x => console.log(x)),\n        debounceTime(200),\n        tap(term => this.viewableVerbs$.next(this.filterEntries(term)))\n      )\n      .subscribe();\n  }\n\n  filterEntries(term) {\n    return this.verbService.verbs.filter(\n      v =>\n        v.gloss.toLowerCase().indexOf(term.toLowerCase()) > -1 ||\n        v.tag.toLowerCase().indexOf(term.toLowerCase()) > -1\n    );\n  }\n\n  select(verb) {\n    this.selectedVerb.emit(verb);\n  }\n\n  sortVerbs(verbs) {\n    if (this.display_language === \"english\") {\n      return sortBy(verbs, [\"gloss\"]);\n    } else {\n      return sortBy(verbs, [\"display\"]);\n    }\n  }\n}\n","<div class=\"margin-top-20 full-width centered panel\">\n    <div class=\"panel__header container\">\n        <div class=\"row\">\n            <div class='col-sm-12'>\n                <form class=\"margin-left-25 font-md\">\n                    <mat-form-field class=\"margin-bottom-20\" [formGroup]=\"verbForm\">\n                        <input autocomplete=\"off\" type=\"text\"\n                            [placeholder]=\"'ww.wordmaker.verb.search-placeholder' | translate\" value=\"\"\n                            aria-label=\"Number\" matInput formControlName=\"search\">\n                    </mat-form-field>\n                </form>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='instructions col-sm-12' [ngSwitch]='(viewableVerbs$ | async)?.length'>\n                <p *ngSwitchDefault>\n                    {{ 'ww.wordmaker.verb.select-verb-multiple' | translate: { number: (viewableVerbs$ | async)?.length } }}\n                </p>\n                <p *ngSwitchCase='1'>{{ \"ww.wordmaker.verb.select-verb-single\" | translate }}</p>\n                <p *ngSwitchCase='0'\n                    [innerHTML]=\"'ww.wordmaker.verb.no-matching-verbs' | translate: { value: searchField.value }\"></p>\n            </div>\n        </div>\n    </div>\n    <hr class='margin-bottom-50'>\n    <div class='panel__content'>\n        <ng-template #loading>\n            <mat-spinner class=\"centered\"></mat-spinner>\n        </ng-template>\n        <mat-chip-list class=\"panel__list custom-scroll\" *ngIf=\"viewableVerbs$ | async as verbs; else loading\">\n            <p *ngIf=\"verbs.length === 0\">{{ \"ww.wordmaker.verb.try-again\" | translate }}</p>\n            <mat-chip class=\"margin-5 bg-white border-accent\" (click)=\"select(verb)\" *ngFor=\"let verb of verbs\">\n                <span class=\"centered color-black\" *ngIf=\"display_language !== 'english'\">{{verb.display}}</span>\n                <span class=\"centered color-black\" *ngIf=\"display_language === 'english'\">{{verb.gloss}}</span>\n                <mat-icon class=\"icon-sm margin-left-5\"\n                    [ngClass]=\"verb?.thematic_relation ? 'color-' + verb?.thematic_relation : ''\">brightness_1\n                </mat-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n\n</div>","import { NgModule } from \"@angular/core\";\nimport { WordmakerComponent } from \"./wordmaker/wordmaker.component\";\nimport { WordmakerConjStepComponent } from \"./wordmaker-conj-step/wordmaker-conj-step.component\";\nimport { WordmakerPersStepComponent } from \"./wordmaker-pers-step/wordmaker-pers-step.component\";\nimport { WordmakerVerbStepComponent } from \"./wordmaker-verb-step/wordmaker-verb-step.component\";\nimport { WordmakerTempStepComponent } from \"./wordmaker-temp-step/wordmaker-temp-step.component\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { WordmakerRoutingModule } from \"./wordmaker-routing.module\";\nimport { WordmakerHomeComponent } from \"./wordmaker-home/wordmaker-home.component\";\n\n@NgModule({\n  declarations: [\n    WordmakerComponent,\n    WordmakerConjStepComponent,\n    WordmakerPersStepComponent,\n    WordmakerVerbStepComponent,\n    WordmakerTempStepComponent,\n    WordmakerHomeComponent\n  ],\n  imports: [SharedModule, WordmakerRoutingModule]\n})\nexport class WordmakerModule {}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewChild\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { NotificationService } from \"../../../core/core.module\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport {\n  AffixService,\n  PronounService,\n  VerbService\n} from \"../../../core/core.module\";\nimport { WordmakerSelectionService } from \"../../../core/core.module\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n  selector: \"ww-wordmaker\",\n  templateUrl: \"./wordmaker.component.html\",\n  styleUrls: [\"./wordmaker.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WordmakerComponent implements OnInit {\n  loading;\n  isLinear = true;\n  verbLabel = new BehaviorSubject<string>(marker(\"ww.wordmaker.verb.question\"));\n  persLabel = new BehaviorSubject<string>(marker(\"ww.wordmaker.pers.question\"));\n  tempLabel = new BehaviorSubject<string>(marker(\"ww.wordmaker.temp.question\"));\n  verbFormGroup: FormGroup;\n  persFormGroup: FormGroup;\n  tempFormGroup: FormGroup;\n  currentStep$: Observable<number>;\n  @ViewChild(\"stepper\") private stepper;\n  constructor(\n    private formBuilder: FormBuilder,\n    private notificationService: NotificationService,\n    private affixService: AffixService,\n    private pronounService: PronounService,\n    private verbService: VerbService,\n    private selectionService: WordmakerSelectionService,\n    private translate: TranslateService\n  ) {}\n  ngOnInit(): void {\n    // console.log(this.stepper.selectedIndex)\n    // this.stepper.valueChanges.subscribe(x => console.log(x.selected))\n    // Step 1: Verb\n    this.verbFormGroup = this.formBuilder.group({\n      verbCtrl: [\"\", Validators.required]\n    });\n    this.verbFormGroup.controls.verbCtrl.valueChanges.subscribe(x => {\n      if (x) {\n        this.verbLabel.next(x.gloss);\n      } else {\n        this.verbLabel.next(\"ww.wordmaker.verb.question\");\n      }\n      this.selectionService.updateVerb(x);\n    });\n    // Step 2: Pronoun\n    this.persFormGroup = this.formBuilder.group({\n      persCtrl: [\"\", Validators.required]\n    });\n    this.persFormGroup.controls.persCtrl.valueChanges.subscribe(x => {\n      if (x) {\n        let label = \"\";\n        if (\"agent\" in x && \"patient\" in x) {\n          label = x.agent.gloss + \" > \" + x.patient.gloss;\n          this.selectionService.updateAgent(x.agent);\n          this.selectionService.updatePatient(x.patient);\n        } else if (\"agent\" in x) {\n          this.selectionService.updateAgent(x.agent);\n          label = x.agent.gloss;\n        } else if (\"patient\" in x) {\n          this.selectionService.updatePatient(x.patient);\n          label = x.patient.gloss;\n        }\n        this.persLabel.next(label);\n      } else {\n        this.persLabel.next(\"ww.wordmaker.pers.question\");\n      }\n    });\n    // Step 3: Temporal\n    this.tempFormGroup = this.formBuilder.group({\n      tempCtrl: [\"\", Validators.required]\n    });\n    this.tempFormGroup.controls.tempCtrl.valueChanges.subscribe(x => {\n      if (x) {\n        this.tempLabel.next(x.gloss);\n      } else {\n        this.tempLabel.next(\"ww.wordmaker.temp.question\");\n      }\n      this.selectionService.updateAffOption(x);\n    });\n  }\n\n  // tslint:disable-next-line: use-life-cycle-interface\n  ngAfterViewInit() {\n    this.currentStep$ = this.stepper.selectedIndex.valueChanges;\n  }\n\n  randomX(x) {\n    return x[Math.floor(Math.random() * (x.length - 1) + 1)];\n  }\n\n  selectRandomIfNull(type) {\n    if (type === \"verb\" && !this.verbFormGroup.controls.verbCtrl.value) {\n      this.onVerbSelect(this.randomX(this.verbService.verbs), true);\n    } else if (type === \"pers\" && !this.persFormGroup.controls.persCtrl.value) {\n      if (\n        this.verbFormGroup.controls.verbCtrl.value.thematic_relation ===\n        \"purple\"\n      ) {\n        // TODO: Filter options\n        this.onPersSelect({\n          agent: this.randomX(this.pronounService.pronouns),\n          patient: this.randomX(this.pronounService.pronouns)\n        });\n      } else if (\n        this.verbFormGroup.controls.verbCtrl.value.thematic_relation === \"red\"\n      ) {\n        this.onPersSelect(\n          {\n            agent: this.randomX(this.pronounService.pronouns)\n          },\n          true\n        );\n      } else if (\n        this.verbFormGroup.controls.verbCtrl.value.thematic_relation === \"blue\"\n      ) {\n        this.onPersSelect(\n          {\n            patient: this.randomX(this.pronounService.pronouns)\n          },\n          true\n        );\n      }\n    } else if (type === \"temp\" && !this.tempFormGroup.controls.tempCtrl.value) {\n      this.onTempSelect(this.randomX(this.affixService.affixoptions), true);\n    }\n  }\n\n  onVerbSelect($event, random = false) {\n    // Reset following steps\n    this.selectionService.updateAgent(\"\");\n    this.selectionService.updatePatient(\"\");\n    this.selectionService.updateAffOption(\"\");\n    this.persFormGroup.reset();\n    this.tempFormGroup.reset();\n    this.verbFormGroup.controls.verbCtrl.setValue($event);\n    if (random) {\n      this.notificationService.translated(\n        marker(\"ww.wordmaker.notifications.random.verb\"),\n        { value: $event.gloss },\n        \"success\"\n      );\n    } else {\n      this.notificationService.translated(\n        marker(\"ww.wordmaker.notifications.selected.verb\"),\n        { value: $event.gloss },\n        \"success\"\n      );\n    }\n    this.stepper.next();\n  }\n\n  onPersSelect($event, random = false) {\n    this.persFormGroup.controls.persCtrl.setValue($event);\n    let completed = false;\n    // Reset following step\n    this.selectionService.updateAffOption(\"\");\n    this.tempFormGroup.reset();\n    if (\"agent\" in $event && \"patient\" in $event) {\n      if (random) {\n        this.notificationService.translated(\n          marker(\"ww.wordmaker.notifications.random.pers.transitive\"),\n          { agent: $event.agent.gloss, patient: $event.patient.gloss },\n          \"success\"\n        );\n      } else {\n        this.notificationService.translated(\n          marker(\"ww.wordmaker.notifications.selected.pers.transitive\"),\n          { agent: $event.agent.gloss, patient: $event.patient.gloss },\n          \"success\"\n        );\n      }\n      completed = true;\n    } else if (\"agent\" in $event) {\n      if (\n        this.verbFormGroup.controls.verbCtrl.value.thematic_relation === \"red\"\n      ) {\n        if (random) {\n          this.notificationService.translated(\n            marker(\"ww.wordmaker.notifications.random.pers.intransitive\"),\n            { value: $event.agent.gloss },\n            \"success\"\n          );\n        } else {\n          this.notificationService.translated(\n            marker(\"ww.wordmaker.notifications.selected.pers.intransitive\"),\n            { value: $event.agent.gloss },\n            \"success\"\n          );\n        }\n        completed = true;\n      }\n    } else if (\"patient\" in $event) {\n      if (\n        this.verbFormGroup.controls.verbCtrl.value.thematic_relation === \"blue\"\n      ) {\n        if (random) {\n          this.notificationService.translated(\n            marker(\"ww.wordmaker.notifications.random.pers.intransitive\"),\n            { value: $event.patient.gloss },\n            \"success\"\n          );\n        } else {\n          this.notificationService.translated(\n            marker(\"ww.wordmaker.notifications.selected.pers.intransitive\"),\n            { value: $event.patient.gloss },\n            \"success\"\n          );\n        }\n        completed = true;\n      }\n    }\n    if (completed) {\n      this.stepper.next();\n    }\n  }\n\n  onTempSelect($event, random = false) {\n    this.tempFormGroup.controls.tempCtrl.setValue($event);\n    if (random) {\n      this.notificationService.translated(\n        marker(\"ww.wordmaker.notifications.random.temp\"),\n        { value: $event.gloss },\n        \"success\"\n      );\n    } else {\n      this.notificationService.translated(\n        marker(\"ww.wordmaker.notifications.selected.temp\"),\n        { value: $event.gloss },\n        \"success\"\n      );\n    }\n    this.stepper.next();\n  }\n}\n","<div class='container page__content vwidth-90 centered margin-bottom-50'>\n    <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n        <mat-step [stepControl]=\"verbFormGroup\">\n            <form [formGroup]=\"verbFormGroup\">\n                <ng-template matStepLabel>{{ verbLabel | async | translate }}</ng-template>\n                <div class='step-container'>\n                    <ww-wordmaker-verb-step (selectedVerb)='onVerbSelect($event)' *ngIf='stepper.selectedIndex === 0; else loading'></ww-wordmaker-verb-step>\n                </div>\n                <div class='margin-top-30'>\n                    <button mat-raised-button class='mat-accent float-right' (click)=\"selectRandomIfNull('verb')\"\n                        matStepperNext>{{ 'ww.wordmaker.next' | translate }}</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step [stepControl]=\"persFormGroup\">\n            <form [formGroup]=\"persFormGroup\">\n                <ng-template matStepLabel>{{ persLabel | async | translate }}</ng-template>\n                <ww-wordmaker-pers-step [selectedVerb]=\"verbFormGroup.controls.verbCtrl.value\" (selectedPers)='onPersSelect($event)' *ngIf='stepper.selectedIndex === 1; else loading'></ww-wordmaker-pers-step>\n                <div class='margin-top-30'>\n                    <button mat-raised-button class='mat-accent float-left' matStepperPrevious>{{ 'ww.wordmaker.previous' | translate }}</button>\n                    <button mat-raised-button class='mat-accent float-right' (click)=\"selectRandomIfNull('pers')\"\n                        matStepperNext>{{ 'ww.wordmaker.next' | translate }}</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step [stepControl]=\"tempFormGroup\">\n            <form [formGroup]=\"persFormGroup\">\n                <ng-template matStepLabel>{{ tempLabel | async | translate }}</ng-template>\n                <ww-wordmaker-temp-step *ngIf='stepper.selectedIndex === 2; else loading' [selectedVerb]=\"verbFormGroup.controls.verbCtrl.value\" [selectedPers]=\"persFormGroup.controls.persCtrl.value\" (selectedTemp)='onTempSelect($event)'></ww-wordmaker-temp-step>\n                <div class='margin-top-30'>\n                    <button mat-raised-button class='mat-accent float-left' matStepperPrevious>{{ 'ww.wordmaker.previous' | translate }}</button>\n                    <button mat-raised-button class='mat-accent float-right' (click)=\"selectRandomIfNull('temp')\"\n                        matStepperNext>{{ 'ww.wordmaker.next' | translate }}</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>{{ 'ww.wordmaker.finished' | translate }}</ng-template>\n            <ww-wordmaker-conj-step *ngIf='stepper.selectedIndex === 3; else loading'></ww-wordmaker-conj-step>\n            <div class='margin-top-30'>\n                <button mat-raised-button class='mat-accent float-left' matStepperPrevious>{{ 'ww.wordmaker.previous' | translate }}</button>\n                <button mat-raised-button class='mat-accent float-right' (click)=\"stepper.reset()\">{{ 'ww.wordmaker.restart' | translate }}</button>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>\n</div>"]}