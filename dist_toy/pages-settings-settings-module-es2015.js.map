{"version":3,"sources":["./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.module.ts","./src/app/pages/settings/settings/settings-container.component.ts","./src/app/pages/settings/settings/settings-container.component.html"],"names":[],"mappings":"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","file":"pages-settings-settings-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { SettingsContainerComponent } from \"./settings/settings-container.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsContainerComponent,\n    data: { title: \"ww.menu.settings\" }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { SettingsContainerComponent } from \"./settings/settings-container.component\";\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\n})\nexport class SettingsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { Store, select } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\n\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from \"../../../core/core.module\";\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeLevel,\n  actionSettingsChangeHighlight,\n  actionSettingsChangeTestApi,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader\n} from \"../../../core/settings/settings.actions\";\nimport { SettingsState, State } from \"../../../core/settings/settings.model\";\nimport { selectSettings } from \"../../../core/settings/settings.selectors\";\n\n@Component({\n  selector: \"ww-settings\",\n  templateUrl: \"./settings-container.component.html\",\n  styleUrls: [\"./settings-container.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: \"DEFAULT-THEME\", label: marker(\"ww.settings.themes.blue\") },\n    { value: \"LIGHT-THEME\", label: marker(\"ww.settings.themes.light\") },\n    { value: \"NATURE-THEME\", label: marker(\"ww.settings.themes.nature\") },\n    { value: \"BLACK-THEME\", label: marker(\"ww.settings.themes.dark\") },\n    { value: \"MONKEY-THEME\", label: marker(\"ww.settings.themes.fun\") }\n  ];\n\n  languages = [\n    { value: \"en\", label: marker(\"ww.settings.general.language.en\") },\n    { value: \"fr\", label: marker(\"ww.settings.general.language.fr\") }\n  ];\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onLevelSelect({ checked }, key: string) {\n    this.store.dispatch(actionSettingsChangeLevel({ checked, key }));\n  }\n\n  onHighlightSelect({ checked }, key: string) {\n    this.store.dispatch(actionSettingsChangeHighlight({ checked, key }));\n  }\n\n  onTestApiToggle({ checked: testApi }) {\n    this.store.dispatch(actionSettingsChangeTestApi({ testApi }));\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h1>{{ 'ww.settings.title' | translate }}</h1>\n    </div>\n  </div>\n  <br>\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class='row'>\n      <div class='col-md-6 group' [ngClass]='routeAnimationsElements'>\n        <h2>{{ 'ww.settings.general.highlighting.title' | translate }}</h2>\n        <div class='icon-form-field checkboxes'>\n          <mat-checkbox class=\"pronouns\" [checked]=\"settings.highlight.pronoun\"\n            (change)=\"onHighlightSelect($event, 'pronoun')\">\n            {{ 'ww.settings.general.highlighting.pronouns' | translate }}\n          </mat-checkbox>\n          <mat-checkbox class=\"root\" [checked]=\"settings.highlight.root\" (change)=\"onHighlightSelect($event, 'root')\">\n            {{ 'ww.settings.general.highlighting.verb' | translate }}\n          </mat-checkbox>\n          <mat-checkbox class=\"aspect\" [checked]=\"settings.highlight.aspect\"\n            (change)=\"onHighlightSelect($event, 'aspect')\">\n            {{ 'ww.settings.general.highlighting.aspect' | translate }}\n          </mat-checkbox>\n          <mat-checkbox class=\"prepronominal_prefix\" [checked]=\"settings.highlight.prepronominal_prefix\"\n            (change)=\"onHighlightSelect($event, 'prepronominal_prefix')\">\n            {{ 'ww.settings.general.highlighting.required' | translate }}\n          </mat-checkbox>\n          <mat-checkbox class=\"tmp_affix\" [checked]=\"settings.highlight.tmp_affix\"\n            (change)=\"onHighlightSelect($event, 'tmp_affix')\">\n            {{ 'ww.settings.general.highlighting.temp' | translate }}\n          </mat-checkbox>\n          <mat-checkbox class=\"post_aspectual_suffix\" [checked]=\"settings.highlight.post_aspectual_suffix\"\n            (change)=\"onHighlightSelect($event, 'post_aspectual_suffix')\">\n            {{ 'ww.settings.general.highlighting.post-aspectual' | translate }}\n          </mat-checkbox>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <br>\n    <div class='row'>\n      <div class='col-md-6 group' [ngClass]='routeAnimationsElements'>\n        <h2>{{ 'ww.settings.general.tiers.title' | translate }}</h2>\n        <div class='icon-form-field checkboxes'>\n          <mat-checkbox [checked]=\"settings.level.gloss\" (change)=\"onLevelSelect($event, 'gloss')\">\n            {{ 'ww.settings.general.tiers.gloss' | translate }}\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.level.breakdown\" (change)=\"onLevelSelect($event, 'breakdown')\">\n            {{ 'ww.settings.general.tiers.breakdown' | translate }}\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.level['breakdown-translation']\"\n            (change)=\"onLevelSelect($event, 'breakdown-translation')\">\n            {{ 'ww.settings.general.tiers.breakdown-translation' | translate }}\n          </mat-checkbox>\n          <mat-checkbox [checked]=\"settings.level.translation\" (change)=\"onLevelSelect($event, 'translation')\">\n            {{ 'ww.settings.general.tiers.translation' | translate }}\n          </mat-checkbox>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'ww.settings.general.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"language\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'ww.settings.general.placeholder' | translate\" [ngModel]=\"settings.language\"\n              (selectionChange)=\"onLanguageSelect($event)\" name=\"language\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l.value\">\n                {{  l.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"bars\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'ww.settings.themes.sticky-header' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.stickyHeader\" (change)=\"onStickyHeaderToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'ww.settings.themes.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'ww.settings.themes.placeholder' | translate\" [ngModel]=\"settings.theme\"\n              (selectionChange)=\"onThemeSelect($event)\" name=\"themes\">\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\n                {{ t.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'ww.settings.themes.night-mode' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.autoNightMode\" (change)=\"onAutoNightModeToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-placeholder>{{ 'ww.settings.advanced' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.testApi\" (change)=\"onTestApiToggle($event)\">\n            {{ 'ww.settings.testApi' | translate}}\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>"],"sourceRoot":"webpack:///"}